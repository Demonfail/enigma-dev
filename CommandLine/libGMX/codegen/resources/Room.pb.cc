// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resources/Room.proto

#include "resources/Room.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace buffers {
namespace resources {
class Room_MakerSettingsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Room_MakerSettings>
      _instance;
} _Room_MakerSettings_default_instance_;
class Room_BackgroundDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Room_Background>
      _instance;
} _Room_Background_default_instance_;
class Room_ViewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Room_View>
      _instance;
} _Room_View_default_instance_;
class Room_InstanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Room_Instance>
      _instance;
} _Room_Instance_default_instance_;
class Room_TileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Room_Tile>
      _instance;
} _Room_Tile_default_instance_;
class RoomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Room>
      _instance;
} _Room_default_instance_;
}  // namespace resources
}  // namespace buffers
namespace protobuf_resources_2fRoom_2eproto {
void InitDefaultsRoom_MakerSettingsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::buffers::resources::_Room_MakerSettings_default_instance_;
    new (ptr) ::buffers::resources::Room_MakerSettings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::buffers::resources::Room_MakerSettings::InitAsDefaultInstance();
}

void InitDefaultsRoom_MakerSettings() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoom_MakerSettingsImpl);
}

void InitDefaultsRoom_BackgroundImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::buffers::resources::_Room_Background_default_instance_;
    new (ptr) ::buffers::resources::Room_Background();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::buffers::resources::Room_Background::InitAsDefaultInstance();
}

void InitDefaultsRoom_Background() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoom_BackgroundImpl);
}

void InitDefaultsRoom_ViewImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::buffers::resources::_Room_View_default_instance_;
    new (ptr) ::buffers::resources::Room_View();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::buffers::resources::Room_View::InitAsDefaultInstance();
}

void InitDefaultsRoom_View() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoom_ViewImpl);
}

void InitDefaultsRoom_InstanceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::buffers::resources::_Room_Instance_default_instance_;
    new (ptr) ::buffers::resources::Room_Instance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::buffers::resources::Room_Instance::InitAsDefaultInstance();
}

void InitDefaultsRoom_Instance() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoom_InstanceImpl);
}

void InitDefaultsRoom_TileImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::buffers::resources::_Room_Tile_default_instance_;
    new (ptr) ::buffers::resources::Room_Tile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::buffers::resources::Room_Tile::InitAsDefaultInstance();
}

void InitDefaultsRoom_Tile() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoom_TileImpl);
}

void InitDefaultsRoomImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_resources_2fRoom_2eproto::InitDefaultsRoom_MakerSettings();
  protobuf_resources_2fRoom_2eproto::InitDefaultsRoom_Background();
  protobuf_resources_2fRoom_2eproto::InitDefaultsRoom_View();
  protobuf_resources_2fRoom_2eproto::InitDefaultsRoom_Instance();
  protobuf_resources_2fRoom_2eproto::InitDefaultsRoom_Tile();
  {
    void* ptr = &::buffers::resources::_Room_default_instance_;
    new (ptr) ::buffers::resources::Room();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::buffers::resources::Room::InitAsDefaultInstance();
}

void InitDefaultsRoom() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRoomImpl);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, show_grid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, show_objects_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, show_tiles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, show_backgrounds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, show_foregrounds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, show_views_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, delete_underlying_objects_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, delete_underlying_tiles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, page_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, xoffset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_MakerSettings, yoffset_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Background, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Background, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Background, visible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Background, foreground_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Background, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Background, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Background, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Background, htiled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Background, vtiled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Background, hspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Background, vspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Background, stretch_),
  2,
  3,
  0,
  1,
  6,
  4,
  5,
  8,
  9,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, visible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, object_following_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, xview_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, yview_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, wview_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, hview_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, xport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, yport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, wport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, hport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, hborder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, vborder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, hspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_View, vspeed_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  13,
  11,
  12,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Instance, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Instance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Instance, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Instance, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Instance, object_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Instance, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Instance, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Instance, locked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Instance, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Instance, xscale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Instance, yscale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Instance, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Instance, rotation_),
  0,
  3,
  1,
  4,
  5,
  6,
  2,
  7,
  8,
  10,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, background_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, locked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, xoffset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, yoffset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, depth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, xscale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, yscale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room_Tile, color_),
  0,
  2,
  1,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  11,
  10,
  13,
  12,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, caption_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, vsnap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, hsnap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, isometric_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, persistent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, show_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, enable_views_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, clear_view_background_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, clear_display_buffer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, maker_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, backgrounds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, views_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, instances_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, tiles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, use_physics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, phy_world_top_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, phy_world_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, phy_world_right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, phy_world_bottom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, phy_world_xgravity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, phy_world_ygravity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Room, phy_world_pixel_meters_),
  2,
  24,
  0,
  4,
  5,
  6,
  7,
  9,
  22,
  10,
  8,
  11,
  1,
  12,
  13,
  14,
  3,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  15,
  16,
  17,
  18,
  21,
  19,
  20,
  23,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 19, sizeof(::buffers::resources::Room_MakerSettings)},
  { 33, 48, sizeof(::buffers::resources::Room_Background)},
  { 58, 77, sizeof(::buffers::resources::Room_View)},
  { 91, 107, sizeof(::buffers::resources::Room_Instance)},
  { 118, 137, sizeof(::buffers::resources::Room_Tile)},
  { 151, 185, sizeof(::buffers::resources::Room)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::buffers::resources::_Room_MakerSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::buffers::resources::_Room_Background_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::buffers::resources::_Room_View_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::buffers::resources::_Room_Instance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::buffers::resources::_Room_Tile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::buffers::resources::_Room_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "resources/Room.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024resources/Room.proto\022\021buffers.resource"
      "s\032\roptions.proto\"\305\024\n\004Room\022\014\n\004name\030\034 \001(\t\022"
      "\036\n\002id\030\035 \001(\005B\022\202\265\030\016GMX_DEPRECATED\022\017\n\007capti"
      "on\030\001 \001(\t\022\r\n\005width\030\002 \001(\r\022\016\n\006height\030\003 \001(\r\022"
      "\r\n\005vsnap\030\004 \001(\r\022\r\n\005hsnap\030\005 \001(\r\022\021\n\tisometr"
      "ic\030\006 \001(\010\022\r\n\005speed\030\033 \001(\r\022\022\n\npersistent\030\007 "
      "\001(\010\022\031\n\005color\030\010 \001(\005B\n\202\265\030\006colour\022\"\n\nshow_c"
      "olor\030\t \001(\010B\016\202\265\030\nshowcolour\022\014\n\004code\030\n \001(\t"
      "\022%\n\014enable_views\030\013 \001(\010B\017\202\265\030\013enableViews\022"
      "6\n\025clear_view_background\030\014 \001(\010B\027\202\265\030\023clea"
      "rViewBackground\0224\n\024clear_display_buffer\030"
      "\r \001(\010B\026\202\265\030\022clearDisplayBuffer\022P\n\016maker_s"
      "ettings\030\016 \001(\0132%.buffers.resources.Room.M"
      "akerSettingsB\021\202\265\030\rmakerSettings\022S\n\013backg"
      "rounds\030\017 \003(\0132\".buffers.resources.Room.Ba"
      "ckgroundB\032\202\265\030\026backgrounds/background\022;\n\005"
      "views\030\020 \003(\0132\034.buffers.resources.Room.Vie"
      "wB\016\202\265\030\nviews/view\022K\n\tinstances\030\021 \003(\0132 .b"
      "uffers.resources.Room.InstanceB\026\202\265\030\022inst"
      "ances/instance\022;\n\005tiles\030\022 \003(\0132\034.buffers."
      "resources.Room.TileB\016\202\265\030\ntiles/tile\022%\n\013u"
      "se_physics\030\023 \001(\010B\020\202\265\030\014PhysicsWorld\022*\n\rph"
      "y_world_top\030\024 \001(\005B\023\202\265\030\017PhysicsWorldTop\022,"
      "\n\016phy_world_left\030\025 \001(\005B\024\202\265\030\020PhysicsWorld"
      "Left\022.\n\017phy_world_right\030\026 \001(\005B\025\202\265\030\021Physi"
      "csWorldRight\0220\n\020phy_world_bottom\030\027 \001(\005B\026"
      "\202\265\030\022PhysicsWorldBottom\0224\n\022phy_world_xgra"
      "vity\030\030 \001(\001B\030\202\265\030\024PhysicsWorldGravityX\0224\n\022"
      "phy_world_ygravity\030\031 \001(\001B\030\202\265\030\024PhysicsWor"
      "ldGravityY\022;\n\026phy_world_pixel_meters\030\032 \001"
      "(\001B\033\202\265\030\027PhysicsWorldPixToMeters\032\350\003\n\rMake"
      "rSettings\022\026\n\003set\030\001 \001(\010B\t\202\265\030\005isSet\022\024\n\005wid"
      "th\030\002 \001(\010B\005\202\265\030\001w\022\025\n\006height\030\003 \001(\010B\005\202\265\030\001h\022\037"
      "\n\tshow_grid\030\004 \001(\010B\014\202\265\030\010showGrid\022%\n\014show_"
      "objects\030\005 \001(\010B\017\202\265\030\013showObjects\022!\n\nshow_t"
      "iles\030\006 \001(\010B\r\202\265\030\tshowTiles\022-\n\020show_backgr"
      "ounds\030\007 \001(\010B\023\202\265\030\017showBackgrounds\022-\n\020show"
      "_foregrounds\030\010 \001(\010B\023\202\265\030\017showForegrounds\022"
      "!\n\nshow_views\030\t \001(\010B\r\202\265\030\tshowViews\022:\n\031de"
      "lete_underlying_objects\030\n \001(\010B\027\202\265\030\023delet"
      "eUnderlyingObj\022:\n\027delete_underlying_tile"
      "s\030\013 \001(\010B\031\202\265\030\025deleteUnderlyingTiles\022\014\n\004pa"
      "ge\030\014 \001(\r\022\017\n\007xoffset\030\r \001(\005\022\017\n\007yoffset\030\016 \001"
      "(\005\032\246\001\n\nBackground\022\017\n\007visible\030\001 \001(\010\022\022\n\nfo"
      "reground\030\002 \001(\010\022\014\n\004name\030\003 \001(\t\022\t\n\001x\030\004 \001(\005\022"
      "\t\n\001y\030\005 \001(\005\022\016\n\006htiled\030\006 \001(\010\022\016\n\006vtiled\030\007 \001"
      "(\010\022\016\n\006hspeed\030\010 \001(\001\022\016\n\006vspeed\030\t \001(\001\022\017\n\007st"
      "retch\030\n \001(\010\032\370\001\n\004View\022\017\n\007visible\030\001 \001(\010\022%\n"
      "\020object_following\030\002 \001(\tB\013\202\265\030\007objName\022\r\n\005"
      "xview\030\003 \001(\005\022\r\n\005yview\030\004 \001(\005\022\r\n\005wview\030\005 \001("
      "\r\022\r\n\005hview\030\006 \001(\r\022\r\n\005xport\030\007 \001(\005\022\r\n\005yport"
      "\030\010 \001(\005\022\r\n\005wport\030\t \001(\r\022\r\n\005hport\030\n \001(\r\022\017\n\007"
      "hborder\030\013 \001(\005\022\017\n\007vborder\030\014 \001(\005\022\016\n\006hspeed"
      "\030\r \001(\001\022\016\n\006vspeed\030\016 \001(\001\032\347\001\n\010Instance\022\014\n\004n"
      "ame\030\001 \001(\t\022\022\n\002id\030\002 \001(\005B\006\220\265\030\240\215\006\022 \n\013object_"
      "type\030\003 \001(\tB\013\202\265\030\007objName\022\t\n\001x\030\004 \001(\005\022\t\n\001y\030"
      "\005 \001(\005\022\016\n\006locked\030\006 \001(\010\022\014\n\004code\030\007 \001(\t\022\032\n\006x"
      "scale\030\010 \001(\001B\n\202\265\030\006scaleX\022\032\n\006yscale\030\t \001(\001B"
      "\n\202\265\030\006scaleY\022\031\n\005color\030\n \001(\005B\n\202\265\030\006colour\022\020"
      "\n\010rotation\030\013 \001(\001\032\265\002\n\004Tile\022\014\n\004name\030\001 \001(\t\022"
      "\023\n\002id\030\002 \001(\005B\007\220\265\030\200\255\342\004\022#\n\017background_name\030"
      "\003 \001(\tB\n\202\265\030\006bgName\022\t\n\001x\030\004 \001(\005\022\t\n\001y\030\005 \001(\005\022"
      "\016\n\006locked\030\006 \001(\010\022\027\n\007xoffset\030\007 \001(\005B\006\202\265\030\002xo"
      "\022\027\n\007yoffset\030\010 \001(\005B\006\202\265\030\002yo\022\024\n\005width\030\t \001(\r"
      "B\005\202\265\030\001w\022\025\n\006height\030\n \001(\rB\005\202\265\030\001h\022\r\n\005depth\030"
      "\013 \001(\005\022\032\n\006xscale\030\014 \001(\001B\n\202\265\030\006scaleX\022\032\n\006ysc"
      "ale\030\r \001(\001B\n\202\265\030\006scaleY\022\031\n\005color\030\016 \001(\005B\n\202\265"
      "\030\006colour"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2688);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "resources/Room.proto", &protobuf_RegisterTypes);
  ::protobuf_options_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_resources_2fRoom_2eproto
namespace buffers {
namespace resources {

// ===================================================================

void Room_MakerSettings::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Room_MakerSettings::kSetFieldNumber;
const int Room_MakerSettings::kWidthFieldNumber;
const int Room_MakerSettings::kHeightFieldNumber;
const int Room_MakerSettings::kShowGridFieldNumber;
const int Room_MakerSettings::kShowObjectsFieldNumber;
const int Room_MakerSettings::kShowTilesFieldNumber;
const int Room_MakerSettings::kShowBackgroundsFieldNumber;
const int Room_MakerSettings::kShowForegroundsFieldNumber;
const int Room_MakerSettings::kShowViewsFieldNumber;
const int Room_MakerSettings::kDeleteUnderlyingObjectsFieldNumber;
const int Room_MakerSettings::kDeleteUnderlyingTilesFieldNumber;
const int Room_MakerSettings::kPageFieldNumber;
const int Room_MakerSettings::kXoffsetFieldNumber;
const int Room_MakerSettings::kYoffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Room_MakerSettings::Room_MakerSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_resources_2fRoom_2eproto::InitDefaultsRoom_MakerSettings();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Room.MakerSettings)
}
Room_MakerSettings::Room_MakerSettings(const Room_MakerSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&set_, &from.set_,
    static_cast<size_t>(reinterpret_cast<char*>(&yoffset_) -
    reinterpret_cast<char*>(&set_)) + sizeof(yoffset_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Room.MakerSettings)
}

void Room_MakerSettings::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&set_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yoffset_) -
      reinterpret_cast<char*>(&set_)) + sizeof(yoffset_));
}

Room_MakerSettings::~Room_MakerSettings() {
  // @@protoc_insertion_point(destructor:buffers.resources.Room.MakerSettings)
  SharedDtor();
}

void Room_MakerSettings::SharedDtor() {
}

void Room_MakerSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Room_MakerSettings::descriptor() {
  ::protobuf_resources_2fRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fRoom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Room_MakerSettings& Room_MakerSettings::default_instance() {
  ::protobuf_resources_2fRoom_2eproto::InitDefaultsRoom_MakerSettings();
  return *internal_default_instance();
}

Room_MakerSettings* Room_MakerSettings::New(::google::protobuf::Arena* arena) const {
  Room_MakerSettings* n = new Room_MakerSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Room_MakerSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Room.MakerSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    ::memset(&set_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&show_foregrounds_) -
        reinterpret_cast<char*>(&set_)) + sizeof(show_foregrounds_));
  }
  if (cached_has_bits & 16128u) {
    ::memset(&show_views_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&yoffset_) -
        reinterpret_cast<char*>(&show_views_)) + sizeof(yoffset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Room_MakerSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Room.MakerSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool set = 1 [(.buffers.gmx) = "isSet"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_set();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &set_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool width = 2 [(.buffers.gmx) = "w"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool height = 3 [(.buffers.gmx) = "h"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_grid = 4 [(.buffers.gmx) = "showGrid"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_show_grid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_grid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_objects = 5 [(.buffers.gmx) = "showObjects"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_show_objects();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_objects_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_tiles = 6 [(.buffers.gmx) = "showTiles"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_show_tiles();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_tiles_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_backgrounds = 7 [(.buffers.gmx) = "showBackgrounds"];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_show_backgrounds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_backgrounds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_foregrounds = 8 [(.buffers.gmx) = "showForegrounds"];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_show_foregrounds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_foregrounds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_views = 9 [(.buffers.gmx) = "showViews"];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_show_views();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_views_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool delete_underlying_objects = 10 [(.buffers.gmx) = "deleteUnderlyingObj"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_delete_underlying_objects();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delete_underlying_objects_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool delete_underlying_tiles = 11 [(.buffers.gmx) = "deleteUnderlyingTiles"];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_delete_underlying_tiles();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delete_underlying_tiles_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 page = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_page();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 xoffset = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_xoffset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xoffset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 yoffset = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_yoffset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yoffset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Room.MakerSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Room.MakerSettings)
  return false;
#undef DO_
}

void Room_MakerSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Room.MakerSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool set = 1 [(.buffers.gmx) = "isSet"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->set(), output);
  }

  // optional bool width = 2 [(.buffers.gmx) = "w"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->width(), output);
  }

  // optional bool height = 3 [(.buffers.gmx) = "h"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->height(), output);
  }

  // optional bool show_grid = 4 [(.buffers.gmx) = "showGrid"];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->show_grid(), output);
  }

  // optional bool show_objects = 5 [(.buffers.gmx) = "showObjects"];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->show_objects(), output);
  }

  // optional bool show_tiles = 6 [(.buffers.gmx) = "showTiles"];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->show_tiles(), output);
  }

  // optional bool show_backgrounds = 7 [(.buffers.gmx) = "showBackgrounds"];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->show_backgrounds(), output);
  }

  // optional bool show_foregrounds = 8 [(.buffers.gmx) = "showForegrounds"];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->show_foregrounds(), output);
  }

  // optional bool show_views = 9 [(.buffers.gmx) = "showViews"];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->show_views(), output);
  }

  // optional bool delete_underlying_objects = 10 [(.buffers.gmx) = "deleteUnderlyingObj"];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->delete_underlying_objects(), output);
  }

  // optional bool delete_underlying_tiles = 11 [(.buffers.gmx) = "deleteUnderlyingTiles"];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->delete_underlying_tiles(), output);
  }

  // optional uint32 page = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->page(), output);
  }

  // optional int32 xoffset = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->xoffset(), output);
  }

  // optional int32 yoffset = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->yoffset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Room.MakerSettings)
}

::google::protobuf::uint8* Room_MakerSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Room.MakerSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool set = 1 [(.buffers.gmx) = "isSet"];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->set(), target);
  }

  // optional bool width = 2 [(.buffers.gmx) = "w"];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->width(), target);
  }

  // optional bool height = 3 [(.buffers.gmx) = "h"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->height(), target);
  }

  // optional bool show_grid = 4 [(.buffers.gmx) = "showGrid"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->show_grid(), target);
  }

  // optional bool show_objects = 5 [(.buffers.gmx) = "showObjects"];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->show_objects(), target);
  }

  // optional bool show_tiles = 6 [(.buffers.gmx) = "showTiles"];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->show_tiles(), target);
  }

  // optional bool show_backgrounds = 7 [(.buffers.gmx) = "showBackgrounds"];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->show_backgrounds(), target);
  }

  // optional bool show_foregrounds = 8 [(.buffers.gmx) = "showForegrounds"];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->show_foregrounds(), target);
  }

  // optional bool show_views = 9 [(.buffers.gmx) = "showViews"];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->show_views(), target);
  }

  // optional bool delete_underlying_objects = 10 [(.buffers.gmx) = "deleteUnderlyingObj"];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->delete_underlying_objects(), target);
  }

  // optional bool delete_underlying_tiles = 11 [(.buffers.gmx) = "deleteUnderlyingTiles"];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->delete_underlying_tiles(), target);
  }

  // optional uint32 page = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->page(), target);
  }

  // optional int32 xoffset = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->xoffset(), target);
  }

  // optional int32 yoffset = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->yoffset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Room.MakerSettings)
  return target;
}

size_t Room_MakerSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Room.MakerSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bool set = 1 [(.buffers.gmx) = "isSet"];
    if (has_set()) {
      total_size += 1 + 1;
    }

    // optional bool width = 2 [(.buffers.gmx) = "w"];
    if (has_width()) {
      total_size += 1 + 1;
    }

    // optional bool height = 3 [(.buffers.gmx) = "h"];
    if (has_height()) {
      total_size += 1 + 1;
    }

    // optional bool show_grid = 4 [(.buffers.gmx) = "showGrid"];
    if (has_show_grid()) {
      total_size += 1 + 1;
    }

    // optional bool show_objects = 5 [(.buffers.gmx) = "showObjects"];
    if (has_show_objects()) {
      total_size += 1 + 1;
    }

    // optional bool show_tiles = 6 [(.buffers.gmx) = "showTiles"];
    if (has_show_tiles()) {
      total_size += 1 + 1;
    }

    // optional bool show_backgrounds = 7 [(.buffers.gmx) = "showBackgrounds"];
    if (has_show_backgrounds()) {
      total_size += 1 + 1;
    }

    // optional bool show_foregrounds = 8 [(.buffers.gmx) = "showForegrounds"];
    if (has_show_foregrounds()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional bool show_views = 9 [(.buffers.gmx) = "showViews"];
    if (has_show_views()) {
      total_size += 1 + 1;
    }

    // optional bool delete_underlying_objects = 10 [(.buffers.gmx) = "deleteUnderlyingObj"];
    if (has_delete_underlying_objects()) {
      total_size += 1 + 1;
    }

    // optional bool delete_underlying_tiles = 11 [(.buffers.gmx) = "deleteUnderlyingTiles"];
    if (has_delete_underlying_tiles()) {
      total_size += 1 + 1;
    }

    // optional uint32 page = 12;
    if (has_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->page());
    }

    // optional int32 xoffset = 13;
    if (has_xoffset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->xoffset());
    }

    // optional int32 yoffset = 14;
    if (has_yoffset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yoffset());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Room_MakerSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Room.MakerSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const Room_MakerSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Room_MakerSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Room.MakerSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Room.MakerSettings)
    MergeFrom(*source);
  }
}

void Room_MakerSettings::MergeFrom(const Room_MakerSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Room.MakerSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_ = from.set_;
    }
    if (cached_has_bits & 0x00000002u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000004u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000008u) {
      show_grid_ = from.show_grid_;
    }
    if (cached_has_bits & 0x00000010u) {
      show_objects_ = from.show_objects_;
    }
    if (cached_has_bits & 0x00000020u) {
      show_tiles_ = from.show_tiles_;
    }
    if (cached_has_bits & 0x00000040u) {
      show_backgrounds_ = from.show_backgrounds_;
    }
    if (cached_has_bits & 0x00000080u) {
      show_foregrounds_ = from.show_foregrounds_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      show_views_ = from.show_views_;
    }
    if (cached_has_bits & 0x00000200u) {
      delete_underlying_objects_ = from.delete_underlying_objects_;
    }
    if (cached_has_bits & 0x00000400u) {
      delete_underlying_tiles_ = from.delete_underlying_tiles_;
    }
    if (cached_has_bits & 0x00000800u) {
      page_ = from.page_;
    }
    if (cached_has_bits & 0x00001000u) {
      xoffset_ = from.xoffset_;
    }
    if (cached_has_bits & 0x00002000u) {
      yoffset_ = from.yoffset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Room_MakerSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Room.MakerSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Room_MakerSettings::CopyFrom(const Room_MakerSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Room.MakerSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Room_MakerSettings::IsInitialized() const {
  return true;
}

void Room_MakerSettings::Swap(Room_MakerSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Room_MakerSettings::InternalSwap(Room_MakerSettings* other) {
  using std::swap;
  swap(set_, other->set_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(show_grid_, other->show_grid_);
  swap(show_objects_, other->show_objects_);
  swap(show_tiles_, other->show_tiles_);
  swap(show_backgrounds_, other->show_backgrounds_);
  swap(show_foregrounds_, other->show_foregrounds_);
  swap(show_views_, other->show_views_);
  swap(delete_underlying_objects_, other->delete_underlying_objects_);
  swap(delete_underlying_tiles_, other->delete_underlying_tiles_);
  swap(page_, other->page_);
  swap(xoffset_, other->xoffset_);
  swap(yoffset_, other->yoffset_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Room_MakerSettings::GetMetadata() const {
  protobuf_resources_2fRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fRoom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Room_Background::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Room_Background::kVisibleFieldNumber;
const int Room_Background::kForegroundFieldNumber;
const int Room_Background::kNameFieldNumber;
const int Room_Background::kXFieldNumber;
const int Room_Background::kYFieldNumber;
const int Room_Background::kHtiledFieldNumber;
const int Room_Background::kVtiledFieldNumber;
const int Room_Background::kHspeedFieldNumber;
const int Room_Background::kVspeedFieldNumber;
const int Room_Background::kStretchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Room_Background::Room_Background()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_resources_2fRoom_2eproto::InitDefaultsRoom_Background();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Room.Background)
}
Room_Background::Room_Background(const Room_Background& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&vspeed_) -
    reinterpret_cast<char*>(&x_)) + sizeof(vspeed_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Room.Background)
}

void Room_Background::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vspeed_) -
      reinterpret_cast<char*>(&x_)) + sizeof(vspeed_));
}

Room_Background::~Room_Background() {
  // @@protoc_insertion_point(destructor:buffers.resources.Room.Background)
  SharedDtor();
}

void Room_Background::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Room_Background::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Room_Background::descriptor() {
  ::protobuf_resources_2fRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fRoom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Room_Background& Room_Background::default_instance() {
  ::protobuf_resources_2fRoom_2eproto::InitDefaultsRoom_Background();
  return *internal_default_instance();
}

Room_Background* Room_Background::New(::google::protobuf::Arena* arena) const {
  Room_Background* n = new Room_Background;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Room_Background::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Room.Background)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stretch_) -
        reinterpret_cast<char*>(&x_)) + sizeof(stretch_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&hspeed_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vspeed_) -
        reinterpret_cast<char*>(&hspeed_)) + sizeof(vspeed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Room_Background::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Room.Background)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool visible = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_visible();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool foreground = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_foreground();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &foreground_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Room.Background.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 x = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool htiled = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_htiled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &htiled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vtiled = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_vtiled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vtiled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double hspeed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_hspeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vspeed = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_vspeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool stretch = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_stretch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stretch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Room.Background)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Room.Background)
  return false;
#undef DO_
}

void Room_Background::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Room.Background)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool visible = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->visible(), output);
  }

  // optional bool foreground = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->foreground(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.Background.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional int32 x = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->x(), output);
  }

  // optional int32 y = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->y(), output);
  }

  // optional bool htiled = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->htiled(), output);
  }

  // optional bool vtiled = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->vtiled(), output);
  }

  // optional double hspeed = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->hspeed(), output);
  }

  // optional double vspeed = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->vspeed(), output);
  }

  // optional bool stretch = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->stretch(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Room.Background)
}

::google::protobuf::uint8* Room_Background::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Room.Background)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool visible = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->visible(), target);
  }

  // optional bool foreground = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->foreground(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.Background.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional int32 x = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->x(), target);
  }

  // optional int32 y = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->y(), target);
  }

  // optional bool htiled = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->htiled(), target);
  }

  // optional bool vtiled = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->vtiled(), target);
  }

  // optional double hspeed = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->hspeed(), target);
  }

  // optional double vspeed = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->vspeed(), target);
  }

  // optional bool stretch = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->stretch(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Room.Background)
  return target;
}

size_t Room_Background::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Room.Background)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 x = 4;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional bool visible = 1;
    if (has_visible()) {
      total_size += 1 + 1;
    }

    // optional bool foreground = 2;
    if (has_foreground()) {
      total_size += 1 + 1;
    }

    // optional bool htiled = 6;
    if (has_htiled()) {
      total_size += 1 + 1;
    }

    // optional bool vtiled = 7;
    if (has_vtiled()) {
      total_size += 1 + 1;
    }

    // optional int32 y = 5;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional bool stretch = 10;
    if (has_stretch()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional double hspeed = 8;
    if (has_hspeed()) {
      total_size += 1 + 8;
    }

    // optional double vspeed = 9;
    if (has_vspeed()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Room_Background::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Room.Background)
  GOOGLE_DCHECK_NE(&from, this);
  const Room_Background* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Room_Background>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Room.Background)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Room.Background)
    MergeFrom(*source);
  }
}

void Room_Background::MergeFrom(const Room_Background& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Room.Background)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      visible_ = from.visible_;
    }
    if (cached_has_bits & 0x00000008u) {
      foreground_ = from.foreground_;
    }
    if (cached_has_bits & 0x00000010u) {
      htiled_ = from.htiled_;
    }
    if (cached_has_bits & 0x00000020u) {
      vtiled_ = from.vtiled_;
    }
    if (cached_has_bits & 0x00000040u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000080u) {
      stretch_ = from.stretch_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      hspeed_ = from.hspeed_;
    }
    if (cached_has_bits & 0x00000200u) {
      vspeed_ = from.vspeed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Room_Background::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Room.Background)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Room_Background::CopyFrom(const Room_Background& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Room.Background)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Room_Background::IsInitialized() const {
  return true;
}

void Room_Background::Swap(Room_Background* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Room_Background::InternalSwap(Room_Background* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(x_, other->x_);
  swap(visible_, other->visible_);
  swap(foreground_, other->foreground_);
  swap(htiled_, other->htiled_);
  swap(vtiled_, other->vtiled_);
  swap(y_, other->y_);
  swap(stretch_, other->stretch_);
  swap(hspeed_, other->hspeed_);
  swap(vspeed_, other->vspeed_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Room_Background::GetMetadata() const {
  protobuf_resources_2fRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fRoom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Room_View::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Room_View::kVisibleFieldNumber;
const int Room_View::kObjectFollowingFieldNumber;
const int Room_View::kXviewFieldNumber;
const int Room_View::kYviewFieldNumber;
const int Room_View::kWviewFieldNumber;
const int Room_View::kHviewFieldNumber;
const int Room_View::kXportFieldNumber;
const int Room_View::kYportFieldNumber;
const int Room_View::kWportFieldNumber;
const int Room_View::kHportFieldNumber;
const int Room_View::kHborderFieldNumber;
const int Room_View::kVborderFieldNumber;
const int Room_View::kHspeedFieldNumber;
const int Room_View::kVspeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Room_View::Room_View()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_resources_2fRoom_2eproto::InitDefaultsRoom_View();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Room.View)
}
Room_View::Room_View(const Room_View& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_following_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_object_following()) {
    object_following_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_following_);
  }
  ::memcpy(&visible_, &from.visible_,
    static_cast<size_t>(reinterpret_cast<char*>(&vborder_) -
    reinterpret_cast<char*>(&visible_)) + sizeof(vborder_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Room.View)
}

void Room_View::SharedCtor() {
  _cached_size_ = 0;
  object_following_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&visible_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vborder_) -
      reinterpret_cast<char*>(&visible_)) + sizeof(vborder_));
}

Room_View::~Room_View() {
  // @@protoc_insertion_point(destructor:buffers.resources.Room.View)
  SharedDtor();
}

void Room_View::SharedDtor() {
  object_following_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Room_View::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Room_View::descriptor() {
  ::protobuf_resources_2fRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fRoom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Room_View& Room_View::default_instance() {
  ::protobuf_resources_2fRoom_2eproto::InitDefaultsRoom_View();
  return *internal_default_instance();
}

Room_View* Room_View::New(::google::protobuf::Arena* arena) const {
  Room_View* n = new Room_View;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Room_View::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Room.View)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!object_following_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*object_following_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 254u) {
    ::memset(&visible_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&yport_) -
        reinterpret_cast<char*>(&visible_)) + sizeof(yport_));
  }
  if (cached_has_bits & 16128u) {
    ::memset(&wport_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vborder_) -
        reinterpret_cast<char*>(&wport_)) + sizeof(vborder_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Room_View::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Room.View)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool visible = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_visible();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string object_following = 2 [(.buffers.gmx) = "objName"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_following()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->object_following().data(), static_cast<int>(this->object_following().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Room.View.object_following");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 xview = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_xview();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xview_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 yview = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_yview();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yview_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 wview = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_wview();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wview_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 hview = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_hview();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hview_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 xport = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_xport();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 yport = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_yport();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 wport = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_wport();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 hport = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_hport();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 hborder = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_hborder();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hborder_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vborder = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_vborder();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vborder_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double hspeed = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {
          set_has_hspeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double vspeed = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {
          set_has_vspeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &vspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Room.View)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Room.View)
  return false;
#undef DO_
}

void Room_View::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Room.View)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool visible = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->visible(), output);
  }

  // optional string object_following = 2 [(.buffers.gmx) = "objName"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->object_following().data(), static_cast<int>(this->object_following().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.View.object_following");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->object_following(), output);
  }

  // optional int32 xview = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->xview(), output);
  }

  // optional int32 yview = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->yview(), output);
  }

  // optional uint32 wview = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->wview(), output);
  }

  // optional uint32 hview = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->hview(), output);
  }

  // optional int32 xport = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->xport(), output);
  }

  // optional int32 yport = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->yport(), output);
  }

  // optional uint32 wport = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->wport(), output);
  }

  // optional uint32 hport = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->hport(), output);
  }

  // optional int32 hborder = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->hborder(), output);
  }

  // optional int32 vborder = 12;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->vborder(), output);
  }

  // optional double hspeed = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->hspeed(), output);
  }

  // optional double vspeed = 14;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->vspeed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Room.View)
}

::google::protobuf::uint8* Room_View::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Room.View)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool visible = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->visible(), target);
  }

  // optional string object_following = 2 [(.buffers.gmx) = "objName"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->object_following().data(), static_cast<int>(this->object_following().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.View.object_following");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->object_following(), target);
  }

  // optional int32 xview = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->xview(), target);
  }

  // optional int32 yview = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->yview(), target);
  }

  // optional uint32 wview = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->wview(), target);
  }

  // optional uint32 hview = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->hview(), target);
  }

  // optional int32 xport = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->xport(), target);
  }

  // optional int32 yport = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->yport(), target);
  }

  // optional uint32 wport = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->wport(), target);
  }

  // optional uint32 hport = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->hport(), target);
  }

  // optional int32 hborder = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->hborder(), target);
  }

  // optional int32 vborder = 12;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->vborder(), target);
  }

  // optional double hspeed = 13;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->hspeed(), target);
  }

  // optional double vspeed = 14;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->vspeed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Room.View)
  return target;
}

size_t Room_View::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Room.View)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string object_following = 2 [(.buffers.gmx) = "objName"];
    if (has_object_following()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->object_following());
    }

    // optional bool visible = 1;
    if (has_visible()) {
      total_size += 1 + 1;
    }

    // optional int32 xview = 3;
    if (has_xview()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->xview());
    }

    // optional int32 yview = 4;
    if (has_yview()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yview());
    }

    // optional uint32 wview = 5;
    if (has_wview()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wview());
    }

    // optional uint32 hview = 6;
    if (has_hview()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hview());
    }

    // optional int32 xport = 7;
    if (has_xport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->xport());
    }

    // optional int32 yport = 8;
    if (has_yport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yport());
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional uint32 wport = 9;
    if (has_wport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->wport());
    }

    // optional uint32 hport = 10;
    if (has_hport()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hport());
    }

    // optional int32 hborder = 11;
    if (has_hborder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->hborder());
    }

    // optional double hspeed = 13;
    if (has_hspeed()) {
      total_size += 1 + 8;
    }

    // optional double vspeed = 14;
    if (has_vspeed()) {
      total_size += 1 + 8;
    }

    // optional int32 vborder = 12;
    if (has_vborder()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vborder());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Room_View::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Room.View)
  GOOGLE_DCHECK_NE(&from, this);
  const Room_View* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Room_View>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Room.View)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Room.View)
    MergeFrom(*source);
  }
}

void Room_View::MergeFrom(const Room_View& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Room.View)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_object_following();
      object_following_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_following_);
    }
    if (cached_has_bits & 0x00000002u) {
      visible_ = from.visible_;
    }
    if (cached_has_bits & 0x00000004u) {
      xview_ = from.xview_;
    }
    if (cached_has_bits & 0x00000008u) {
      yview_ = from.yview_;
    }
    if (cached_has_bits & 0x00000010u) {
      wview_ = from.wview_;
    }
    if (cached_has_bits & 0x00000020u) {
      hview_ = from.hview_;
    }
    if (cached_has_bits & 0x00000040u) {
      xport_ = from.xport_;
    }
    if (cached_has_bits & 0x00000080u) {
      yport_ = from.yport_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      wport_ = from.wport_;
    }
    if (cached_has_bits & 0x00000200u) {
      hport_ = from.hport_;
    }
    if (cached_has_bits & 0x00000400u) {
      hborder_ = from.hborder_;
    }
    if (cached_has_bits & 0x00000800u) {
      hspeed_ = from.hspeed_;
    }
    if (cached_has_bits & 0x00001000u) {
      vspeed_ = from.vspeed_;
    }
    if (cached_has_bits & 0x00002000u) {
      vborder_ = from.vborder_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Room_View::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Room.View)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Room_View::CopyFrom(const Room_View& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Room.View)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Room_View::IsInitialized() const {
  return true;
}

void Room_View::Swap(Room_View* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Room_View::InternalSwap(Room_View* other) {
  using std::swap;
  object_following_.Swap(&other->object_following_);
  swap(visible_, other->visible_);
  swap(xview_, other->xview_);
  swap(yview_, other->yview_);
  swap(wview_, other->wview_);
  swap(hview_, other->hview_);
  swap(xport_, other->xport_);
  swap(yport_, other->yport_);
  swap(wport_, other->wport_);
  swap(hport_, other->hport_);
  swap(hborder_, other->hborder_);
  swap(hspeed_, other->hspeed_);
  swap(vspeed_, other->vspeed_);
  swap(vborder_, other->vborder_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Room_View::GetMetadata() const {
  protobuf_resources_2fRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fRoom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Room_Instance::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Room_Instance::kNameFieldNumber;
const int Room_Instance::kIdFieldNumber;
const int Room_Instance::kObjectTypeFieldNumber;
const int Room_Instance::kXFieldNumber;
const int Room_Instance::kYFieldNumber;
const int Room_Instance::kLockedFieldNumber;
const int Room_Instance::kCodeFieldNumber;
const int Room_Instance::kXscaleFieldNumber;
const int Room_Instance::kYscaleFieldNumber;
const int Room_Instance::kColorFieldNumber;
const int Room_Instance::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Room_Instance::Room_Instance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_resources_2fRoom_2eproto::InitDefaultsRoom_Instance();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Room.Instance)
}
Room_Instance::Room_Instance(const Room_Instance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  object_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_object_type()) {
    object_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_type_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&color_) -
    reinterpret_cast<char*>(&id_)) + sizeof(color_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Room.Instance)
}

void Room_Instance::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&color_) -
      reinterpret_cast<char*>(&id_)) + sizeof(color_));
}

Room_Instance::~Room_Instance() {
  // @@protoc_insertion_point(destructor:buffers.resources.Room.Instance)
  SharedDtor();
}

void Room_Instance::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Room_Instance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Room_Instance::descriptor() {
  ::protobuf_resources_2fRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fRoom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Room_Instance& Room_Instance::default_instance() {
  ::protobuf_resources_2fRoom_2eproto::InitDefaultsRoom_Instance();
  return *internal_default_instance();
}

Room_Instance* Room_Instance::New(::google::protobuf::Arena* arena) const {
  Room_Instance* n = new Room_Instance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Room_Instance::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Room.Instance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!object_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*object_type_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*code_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&xscale_) -
        reinterpret_cast<char*>(&id_)) + sizeof(xscale_));
  }
  if (cached_has_bits & 1792u) {
    ::memset(&yscale_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&color_) -
        reinterpret_cast<char*>(&yscale_)) + sizeof(color_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Room_Instance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Room.Instance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Room.Instance.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 id = 2 [(.buffers.id_start) = 100000];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string object_type = 3 [(.buffers.gmx) = "objName"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->object_type().data(), static_cast<int>(this->object_type().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Room.Instance.object_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 x = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool locked = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_locked();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Room.Instance.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double xscale = 8 [(.buffers.gmx) = "scaleX"];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {
          set_has_xscale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xscale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double yscale = 9 [(.buffers.gmx) = "scaleY"];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u /* 73 & 0xFF */)) {
          set_has_yscale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yscale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 color = 10 [(.buffers.gmx) = "colour"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double rotation = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u /* 89 & 0xFF */)) {
          set_has_rotation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Room.Instance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Room.Instance)
  return false;
#undef DO_
}

void Room_Instance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Room.Instance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.Instance.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 id = 2 [(.buffers.id_start) = 100000];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional string object_type = 3 [(.buffers.gmx) = "objName"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->object_type().data(), static_cast<int>(this->object_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.Instance.object_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->object_type(), output);
  }

  // optional int32 x = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->x(), output);
  }

  // optional int32 y = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->y(), output);
  }

  // optional bool locked = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->locked(), output);
  }

  // optional string code = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.Instance.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->code(), output);
  }

  // optional double xscale = 8 [(.buffers.gmx) = "scaleX"];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->xscale(), output);
  }

  // optional double yscale = 9 [(.buffers.gmx) = "scaleY"];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->yscale(), output);
  }

  // optional int32 color = 10 [(.buffers.gmx) = "colour"];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->color(), output);
  }

  // optional double rotation = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->rotation(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Room.Instance)
}

::google::protobuf::uint8* Room_Instance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Room.Instance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.Instance.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 id = 2 [(.buffers.id_start) = 100000];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional string object_type = 3 [(.buffers.gmx) = "objName"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->object_type().data(), static_cast<int>(this->object_type().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.Instance.object_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->object_type(), target);
  }

  // optional int32 x = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->x(), target);
  }

  // optional int32 y = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->y(), target);
  }

  // optional bool locked = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->locked(), target);
  }

  // optional string code = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.Instance.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->code(), target);
  }

  // optional double xscale = 8 [(.buffers.gmx) = "scaleX"];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->xscale(), target);
  }

  // optional double yscale = 9 [(.buffers.gmx) = "scaleY"];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->yscale(), target);
  }

  // optional int32 color = 10 [(.buffers.gmx) = "colour"];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->color(), target);
  }

  // optional double rotation = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->rotation(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Room.Instance)
  return target;
}

size_t Room_Instance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Room.Instance)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string object_type = 3 [(.buffers.gmx) = "objName"];
    if (has_object_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->object_type());
    }

    // optional string code = 7;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional int32 id = 2 [(.buffers.id_start) = 100000];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 x = 4;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 5;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional bool locked = 6;
    if (has_locked()) {
      total_size += 1 + 1;
    }

    // optional double xscale = 8 [(.buffers.gmx) = "scaleX"];
    if (has_xscale()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional double yscale = 9 [(.buffers.gmx) = "scaleY"];
    if (has_yscale()) {
      total_size += 1 + 8;
    }

    // optional double rotation = 11;
    if (has_rotation()) {
      total_size += 1 + 8;
    }

    // optional int32 color = 10 [(.buffers.gmx) = "colour"];
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->color());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Room_Instance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Room.Instance)
  GOOGLE_DCHECK_NE(&from, this);
  const Room_Instance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Room_Instance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Room.Instance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Room.Instance)
    MergeFrom(*source);
  }
}

void Room_Instance::MergeFrom(const Room_Instance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Room.Instance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_object_type();
      object_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.object_type_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_code();
      code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000010u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000020u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000040u) {
      locked_ = from.locked_;
    }
    if (cached_has_bits & 0x00000080u) {
      xscale_ = from.xscale_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      yscale_ = from.yscale_;
    }
    if (cached_has_bits & 0x00000200u) {
      rotation_ = from.rotation_;
    }
    if (cached_has_bits & 0x00000400u) {
      color_ = from.color_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Room_Instance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Room.Instance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Room_Instance::CopyFrom(const Room_Instance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Room.Instance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Room_Instance::IsInitialized() const {
  return true;
}

void Room_Instance::Swap(Room_Instance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Room_Instance::InternalSwap(Room_Instance* other) {
  using std::swap;
  name_.Swap(&other->name_);
  object_type_.Swap(&other->object_type_);
  code_.Swap(&other->code_);
  swap(id_, other->id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(locked_, other->locked_);
  swap(xscale_, other->xscale_);
  swap(yscale_, other->yscale_);
  swap(rotation_, other->rotation_);
  swap(color_, other->color_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Room_Instance::GetMetadata() const {
  protobuf_resources_2fRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fRoom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Room_Tile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Room_Tile::kNameFieldNumber;
const int Room_Tile::kIdFieldNumber;
const int Room_Tile::kBackgroundNameFieldNumber;
const int Room_Tile::kXFieldNumber;
const int Room_Tile::kYFieldNumber;
const int Room_Tile::kLockedFieldNumber;
const int Room_Tile::kXoffsetFieldNumber;
const int Room_Tile::kYoffsetFieldNumber;
const int Room_Tile::kWidthFieldNumber;
const int Room_Tile::kHeightFieldNumber;
const int Room_Tile::kDepthFieldNumber;
const int Room_Tile::kXscaleFieldNumber;
const int Room_Tile::kYscaleFieldNumber;
const int Room_Tile::kColorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Room_Tile::Room_Tile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_resources_2fRoom_2eproto::InitDefaultsRoom_Tile();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Room.Tile)
}
Room_Tile::Room_Tile(const Room_Tile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  background_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_background_name()) {
    background_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.background_name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&yscale_) -
    reinterpret_cast<char*>(&id_)) + sizeof(yscale_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Room.Tile)
}

void Room_Tile::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  background_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&yscale_) -
      reinterpret_cast<char*>(&id_)) + sizeof(yscale_));
}

Room_Tile::~Room_Tile() {
  // @@protoc_insertion_point(destructor:buffers.resources.Room.Tile)
  SharedDtor();
}

void Room_Tile::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  background_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Room_Tile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Room_Tile::descriptor() {
  ::protobuf_resources_2fRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fRoom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Room_Tile& Room_Tile::default_instance() {
  ::protobuf_resources_2fRoom_2eproto::InitDefaultsRoom_Tile();
  return *internal_default_instance();
}

Room_Tile* Room_Tile::New(::google::protobuf::Arena* arena) const {
  Room_Tile* n = new Room_Tile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Room_Tile::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Room.Tile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!background_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*background_name_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 252u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&yoffset_) -
        reinterpret_cast<char*>(&id_)) + sizeof(yoffset_));
  }
  if (cached_has_bits & 16128u) {
    ::memset(&width_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&yscale_) -
        reinterpret_cast<char*>(&width_)) + sizeof(yscale_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Room_Tile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Room.Tile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Room.Tile.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 id = 2 [(.buffers.id_start) = 10000000];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string background_name = 3 [(.buffers.gmx) = "bgName"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_background_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->background_name().data(), static_cast<int>(this->background_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Room.Tile.background_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 x = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 y = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool locked = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_locked();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 xoffset = 7 [(.buffers.gmx) = "xo"];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_xoffset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xoffset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 yoffset = 8 [(.buffers.gmx) = "yo"];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_yoffset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yoffset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width = 9 [(.buffers.gmx) = "w"];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 10 [(.buffers.gmx) = "h"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 depth = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_depth();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &depth_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double xscale = 12 [(.buffers.gmx) = "scaleX"];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {
          set_has_xscale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &xscale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double yscale = 13 [(.buffers.gmx) = "scaleY"];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {
          set_has_yscale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &yscale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 color = 14 [(.buffers.gmx) = "colour"];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Room.Tile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Room.Tile)
  return false;
#undef DO_
}

void Room_Tile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Room.Tile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.Tile.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 id = 2 [(.buffers.id_start) = 10000000];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional string background_name = 3 [(.buffers.gmx) = "bgName"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->background_name().data(), static_cast<int>(this->background_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.Tile.background_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->background_name(), output);
  }

  // optional int32 x = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->x(), output);
  }

  // optional int32 y = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->y(), output);
  }

  // optional bool locked = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->locked(), output);
  }

  // optional int32 xoffset = 7 [(.buffers.gmx) = "xo"];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->xoffset(), output);
  }

  // optional int32 yoffset = 8 [(.buffers.gmx) = "yo"];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->yoffset(), output);
  }

  // optional uint32 width = 9 [(.buffers.gmx) = "w"];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->width(), output);
  }

  // optional uint32 height = 10 [(.buffers.gmx) = "h"];
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->height(), output);
  }

  // optional int32 depth = 11;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->depth(), output);
  }

  // optional double xscale = 12 [(.buffers.gmx) = "scaleX"];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->xscale(), output);
  }

  // optional double yscale = 13 [(.buffers.gmx) = "scaleY"];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->yscale(), output);
  }

  // optional int32 color = 14 [(.buffers.gmx) = "colour"];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->color(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Room.Tile)
}

::google::protobuf::uint8* Room_Tile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Room.Tile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.Tile.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 id = 2 [(.buffers.id_start) = 10000000];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional string background_name = 3 [(.buffers.gmx) = "bgName"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->background_name().data(), static_cast<int>(this->background_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.Tile.background_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->background_name(), target);
  }

  // optional int32 x = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->x(), target);
  }

  // optional int32 y = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->y(), target);
  }

  // optional bool locked = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->locked(), target);
  }

  // optional int32 xoffset = 7 [(.buffers.gmx) = "xo"];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->xoffset(), target);
  }

  // optional int32 yoffset = 8 [(.buffers.gmx) = "yo"];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->yoffset(), target);
  }

  // optional uint32 width = 9 [(.buffers.gmx) = "w"];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->width(), target);
  }

  // optional uint32 height = 10 [(.buffers.gmx) = "h"];
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->height(), target);
  }

  // optional int32 depth = 11;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->depth(), target);
  }

  // optional double xscale = 12 [(.buffers.gmx) = "scaleX"];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->xscale(), target);
  }

  // optional double yscale = 13 [(.buffers.gmx) = "scaleY"];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->yscale(), target);
  }

  // optional int32 color = 14 [(.buffers.gmx) = "colour"];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->color(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Room.Tile)
  return target;
}

size_t Room_Tile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Room.Tile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string background_name = 3 [(.buffers.gmx) = "bgName"];
    if (has_background_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->background_name());
    }

    // optional int32 id = 2 [(.buffers.id_start) = 10000000];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 x = 4;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }

    // optional int32 y = 5;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }

    // optional bool locked = 6;
    if (has_locked()) {
      total_size += 1 + 1;
    }

    // optional int32 xoffset = 7 [(.buffers.gmx) = "xo"];
    if (has_xoffset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->xoffset());
    }

    // optional int32 yoffset = 8 [(.buffers.gmx) = "yo"];
    if (has_yoffset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yoffset());
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional uint32 width = 9 [(.buffers.gmx) = "w"];
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width());
    }

    // optional uint32 height = 10 [(.buffers.gmx) = "h"];
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

    // optional double xscale = 12 [(.buffers.gmx) = "scaleX"];
    if (has_xscale()) {
      total_size += 1 + 8;
    }

    // optional int32 depth = 11;
    if (has_depth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->depth());
    }

    // optional int32 color = 14 [(.buffers.gmx) = "colour"];
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->color());
    }

    // optional double yscale = 13 [(.buffers.gmx) = "scaleY"];
    if (has_yscale()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Room_Tile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Room.Tile)
  GOOGLE_DCHECK_NE(&from, this);
  const Room_Tile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Room_Tile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Room.Tile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Room.Tile)
    MergeFrom(*source);
  }
}

void Room_Tile::MergeFrom(const Room_Tile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Room.Tile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_background_name();
      background_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.background_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000008u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000010u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000020u) {
      locked_ = from.locked_;
    }
    if (cached_has_bits & 0x00000040u) {
      xoffset_ = from.xoffset_;
    }
    if (cached_has_bits & 0x00000080u) {
      yoffset_ = from.yoffset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000200u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000400u) {
      xscale_ = from.xscale_;
    }
    if (cached_has_bits & 0x00000800u) {
      depth_ = from.depth_;
    }
    if (cached_has_bits & 0x00001000u) {
      color_ = from.color_;
    }
    if (cached_has_bits & 0x00002000u) {
      yscale_ = from.yscale_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Room_Tile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Room.Tile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Room_Tile::CopyFrom(const Room_Tile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Room.Tile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Room_Tile::IsInitialized() const {
  return true;
}

void Room_Tile::Swap(Room_Tile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Room_Tile::InternalSwap(Room_Tile* other) {
  using std::swap;
  name_.Swap(&other->name_);
  background_name_.Swap(&other->background_name_);
  swap(id_, other->id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(locked_, other->locked_);
  swap(xoffset_, other->xoffset_);
  swap(yoffset_, other->yoffset_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(xscale_, other->xscale_);
  swap(depth_, other->depth_);
  swap(color_, other->color_);
  swap(yscale_, other->yscale_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Room_Tile::GetMetadata() const {
  protobuf_resources_2fRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fRoom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Room::InitAsDefaultInstance() {
  ::buffers::resources::_Room_default_instance_._instance.get_mutable()->maker_settings_ = const_cast< ::buffers::resources::Room_MakerSettings*>(
      ::buffers::resources::Room_MakerSettings::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Room::kNameFieldNumber;
const int Room::kIdFieldNumber;
const int Room::kCaptionFieldNumber;
const int Room::kWidthFieldNumber;
const int Room::kHeightFieldNumber;
const int Room::kVsnapFieldNumber;
const int Room::kHsnapFieldNumber;
const int Room::kIsometricFieldNumber;
const int Room::kSpeedFieldNumber;
const int Room::kPersistentFieldNumber;
const int Room::kColorFieldNumber;
const int Room::kShowColorFieldNumber;
const int Room::kCodeFieldNumber;
const int Room::kEnableViewsFieldNumber;
const int Room::kClearViewBackgroundFieldNumber;
const int Room::kClearDisplayBufferFieldNumber;
const int Room::kMakerSettingsFieldNumber;
const int Room::kBackgroundsFieldNumber;
const int Room::kViewsFieldNumber;
const int Room::kInstancesFieldNumber;
const int Room::kTilesFieldNumber;
const int Room::kUsePhysicsFieldNumber;
const int Room::kPhyWorldTopFieldNumber;
const int Room::kPhyWorldLeftFieldNumber;
const int Room::kPhyWorldRightFieldNumber;
const int Room::kPhyWorldBottomFieldNumber;
const int Room::kPhyWorldXgravityFieldNumber;
const int Room::kPhyWorldYgravityFieldNumber;
const int Room::kPhyWorldPixelMetersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Room::Room()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_resources_2fRoom_2eproto::InitDefaultsRoom();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Room)
}
Room::Room(const Room& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      backgrounds_(from.backgrounds_),
      views_(from.views_),
      instances_(from.instances_),
      tiles_(from.tiles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  caption_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_caption()) {
    caption_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.caption_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_maker_settings()) {
    maker_settings_ = new ::buffers::resources::Room_MakerSettings(*from.maker_settings_);
  } else {
    maker_settings_ = NULL;
  }
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&width_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Room)
}

void Room::SharedCtor() {
  _cached_size_ = 0;
  caption_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&maker_settings_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&maker_settings_)) + sizeof(id_));
}

Room::~Room() {
  // @@protoc_insertion_point(destructor:buffers.resources.Room)
  SharedDtor();
}

void Room::SharedDtor() {
  caption_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete maker_settings_;
}

void Room::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Room::descriptor() {
  ::protobuf_resources_2fRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fRoom_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Room& Room::default_instance() {
  ::protobuf_resources_2fRoom_2eproto::InitDefaultsRoom();
  return *internal_default_instance();
}

Room* Room::New(::google::protobuf::Arena* arena) const {
  Room* n = new Room;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Room::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Room)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  backgrounds_.Clear();
  views_.Clear();
  instances_.Clear();
  tiles_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!caption_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*caption_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*code_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(maker_settings_ != NULL);
      maker_settings_->Clear();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&width_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hsnap_) -
        reinterpret_cast<char*>(&width_)) + sizeof(hsnap_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&color_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&use_physics_) -
        reinterpret_cast<char*>(&color_)) + sizeof(use_physics_));
  }
  if (cached_has_bits & 16711680u) {
    ::memset(&phy_world_top_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&phy_world_pixel_meters_) -
        reinterpret_cast<char*>(&phy_world_top_)) + sizeof(phy_world_pixel_meters_));
  }
  id_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Room::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Room)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string caption = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_caption()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->caption().data(), static_cast<int>(this->caption().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Room.caption");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 vsnap = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_vsnap();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vsnap_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 hsnap = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_hsnap();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hsnap_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isometric = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_isometric();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isometric_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool persistent = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_persistent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &persistent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 color = 8 [(.buffers.gmx) = "colour"];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool show_color = 9 [(.buffers.gmx) = "showcolour"];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_show_color();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string code = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Room.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool enable_views = 11 [(.buffers.gmx) = "enableViews"];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_enable_views();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_views_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool clear_view_background = 12 [(.buffers.gmx) = "clearViewBackground"];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_clear_view_background();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clear_view_background_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool clear_display_buffer = 13 [(.buffers.gmx) = "clearDisplayBuffer"];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_clear_display_buffer();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clear_display_buffer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .buffers.resources.Room.MakerSettings maker_settings = 14 [(.buffers.gmx) = "makerSettings"];
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_maker_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .buffers.resources.Room.Background backgrounds = 15 [(.buffers.gmx) = "backgrounds/background"];
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_backgrounds()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .buffers.resources.Room.View views = 16 [(.buffers.gmx) = "views/view"];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_views()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .buffers.resources.Room.Instance instances = 17 [(.buffers.gmx) = "instances/instance"];
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_instances()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .buffers.resources.Room.Tile tiles = 18 [(.buffers.gmx) = "tiles/tile"];
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_tiles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_physics = 19 [(.buffers.gmx) = "PhysicsWorld"];
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {
          set_has_use_physics();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_physics_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 phy_world_top = 20 [(.buffers.gmx) = "PhysicsWorldTop"];
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_phy_world_top();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &phy_world_top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 phy_world_left = 21 [(.buffers.gmx) = "PhysicsWorldLeft"];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {
          set_has_phy_world_left();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &phy_world_left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 phy_world_right = 22 [(.buffers.gmx) = "PhysicsWorldRight"];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          set_has_phy_world_right();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &phy_world_right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 phy_world_bottom = 23 [(.buffers.gmx) = "PhysicsWorldBottom"];
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {
          set_has_phy_world_bottom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &phy_world_bottom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double phy_world_xgravity = 24 [(.buffers.gmx) = "PhysicsWorldGravityX"];
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(193u /* 193 & 0xFF */)) {
          set_has_phy_world_xgravity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &phy_world_xgravity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double phy_world_ygravity = 25 [(.buffers.gmx) = "PhysicsWorldGravityY"];
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(201u /* 201 & 0xFF */)) {
          set_has_phy_world_ygravity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &phy_world_ygravity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double phy_world_pixel_meters = 26 [(.buffers.gmx) = "PhysicsWorldPixToMeters"];
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(209u /* 209 & 0xFF */)) {
          set_has_phy_world_pixel_meters();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &phy_world_pixel_meters_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 speed = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          set_has_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Room.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 id = 29 [(.buffers.gmx) = "GMX_DEPRECATED"];
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Room)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Room)
  return false;
#undef DO_
}

void Room::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Room)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string caption = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->caption().data(), static_cast<int>(this->caption().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.caption");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->caption(), output);
  }

  // optional uint32 width = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->width(), output);
  }

  // optional uint32 height = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->height(), output);
  }

  // optional uint32 vsnap = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->vsnap(), output);
  }

  // optional uint32 hsnap = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hsnap(), output);
  }

  // optional bool isometric = 6;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->isometric(), output);
  }

  // optional bool persistent = 7;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->persistent(), output);
  }

  // optional int32 color = 8 [(.buffers.gmx) = "colour"];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->color(), output);
  }

  // optional bool show_color = 9 [(.buffers.gmx) = "showcolour"];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->show_color(), output);
  }

  // optional string code = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->code(), output);
  }

  // optional bool enable_views = 11 [(.buffers.gmx) = "enableViews"];
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->enable_views(), output);
  }

  // optional bool clear_view_background = 12 [(.buffers.gmx) = "clearViewBackground"];
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->clear_view_background(), output);
  }

  // optional bool clear_display_buffer = 13 [(.buffers.gmx) = "clearDisplayBuffer"];
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->clear_display_buffer(), output);
  }

  // optional .buffers.resources.Room.MakerSettings maker_settings = 14 [(.buffers.gmx) = "makerSettings"];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->maker_settings_, output);
  }

  // repeated .buffers.resources.Room.Background backgrounds = 15 [(.buffers.gmx) = "backgrounds/background"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->backgrounds_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->backgrounds(static_cast<int>(i)), output);
  }

  // repeated .buffers.resources.Room.View views = 16 [(.buffers.gmx) = "views/view"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->views_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->views(static_cast<int>(i)), output);
  }

  // repeated .buffers.resources.Room.Instance instances = 17 [(.buffers.gmx) = "instances/instance"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instances_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->instances(static_cast<int>(i)), output);
  }

  // repeated .buffers.resources.Room.Tile tiles = 18 [(.buffers.gmx) = "tiles/tile"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tiles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->tiles(static_cast<int>(i)), output);
  }

  // optional bool use_physics = 19 [(.buffers.gmx) = "PhysicsWorld"];
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->use_physics(), output);
  }

  // optional int32 phy_world_top = 20 [(.buffers.gmx) = "PhysicsWorldTop"];
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->phy_world_top(), output);
  }

  // optional int32 phy_world_left = 21 [(.buffers.gmx) = "PhysicsWorldLeft"];
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->phy_world_left(), output);
  }

  // optional int32 phy_world_right = 22 [(.buffers.gmx) = "PhysicsWorldRight"];
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->phy_world_right(), output);
  }

  // optional int32 phy_world_bottom = 23 [(.buffers.gmx) = "PhysicsWorldBottom"];
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->phy_world_bottom(), output);
  }

  // optional double phy_world_xgravity = 24 [(.buffers.gmx) = "PhysicsWorldGravityX"];
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(24, this->phy_world_xgravity(), output);
  }

  // optional double phy_world_ygravity = 25 [(.buffers.gmx) = "PhysicsWorldGravityY"];
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(25, this->phy_world_ygravity(), output);
  }

  // optional double phy_world_pixel_meters = 26 [(.buffers.gmx) = "PhysicsWorldPixToMeters"];
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(26, this->phy_world_pixel_meters(), output);
  }

  // optional uint32 speed = 27;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->speed(), output);
  }

  // optional string name = 28;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->name(), output);
  }

  // optional int32 id = 29 [(.buffers.gmx) = "GMX_DEPRECATED"];
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Room)
}

::google::protobuf::uint8* Room::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Room)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string caption = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->caption().data(), static_cast<int>(this->caption().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.caption");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->caption(), target);
  }

  // optional uint32 width = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->width(), target);
  }

  // optional uint32 height = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->height(), target);
  }

  // optional uint32 vsnap = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->vsnap(), target);
  }

  // optional uint32 hsnap = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hsnap(), target);
  }

  // optional bool isometric = 6;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->isometric(), target);
  }

  // optional bool persistent = 7;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->persistent(), target);
  }

  // optional int32 color = 8 [(.buffers.gmx) = "colour"];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->color(), target);
  }

  // optional bool show_color = 9 [(.buffers.gmx) = "showcolour"];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->show_color(), target);
  }

  // optional string code = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->code(), target);
  }

  // optional bool enable_views = 11 [(.buffers.gmx) = "enableViews"];
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->enable_views(), target);
  }

  // optional bool clear_view_background = 12 [(.buffers.gmx) = "clearViewBackground"];
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->clear_view_background(), target);
  }

  // optional bool clear_display_buffer = 13 [(.buffers.gmx) = "clearDisplayBuffer"];
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->clear_display_buffer(), target);
  }

  // optional .buffers.resources.Room.MakerSettings maker_settings = 14 [(.buffers.gmx) = "makerSettings"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, *this->maker_settings_, deterministic, target);
  }

  // repeated .buffers.resources.Room.Background backgrounds = 15 [(.buffers.gmx) = "backgrounds/background"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->backgrounds_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->backgrounds(static_cast<int>(i)), deterministic, target);
  }

  // repeated .buffers.resources.Room.View views = 16 [(.buffers.gmx) = "views/view"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->views_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->views(static_cast<int>(i)), deterministic, target);
  }

  // repeated .buffers.resources.Room.Instance instances = 17 [(.buffers.gmx) = "instances/instance"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->instances_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->instances(static_cast<int>(i)), deterministic, target);
  }

  // repeated .buffers.resources.Room.Tile tiles = 18 [(.buffers.gmx) = "tiles/tile"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tiles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->tiles(static_cast<int>(i)), deterministic, target);
  }

  // optional bool use_physics = 19 [(.buffers.gmx) = "PhysicsWorld"];
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->use_physics(), target);
  }

  // optional int32 phy_world_top = 20 [(.buffers.gmx) = "PhysicsWorldTop"];
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->phy_world_top(), target);
  }

  // optional int32 phy_world_left = 21 [(.buffers.gmx) = "PhysicsWorldLeft"];
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->phy_world_left(), target);
  }

  // optional int32 phy_world_right = 22 [(.buffers.gmx) = "PhysicsWorldRight"];
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->phy_world_right(), target);
  }

  // optional int32 phy_world_bottom = 23 [(.buffers.gmx) = "PhysicsWorldBottom"];
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->phy_world_bottom(), target);
  }

  // optional double phy_world_xgravity = 24 [(.buffers.gmx) = "PhysicsWorldGravityX"];
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(24, this->phy_world_xgravity(), target);
  }

  // optional double phy_world_ygravity = 25 [(.buffers.gmx) = "PhysicsWorldGravityY"];
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(25, this->phy_world_ygravity(), target);
  }

  // optional double phy_world_pixel_meters = 26 [(.buffers.gmx) = "PhysicsWorldPixToMeters"];
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(26, this->phy_world_pixel_meters(), target);
  }

  // optional uint32 speed = 27;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->speed(), target);
  }

  // optional string name = 28;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Room.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->name(), target);
  }

  // optional int32 id = 29 [(.buffers.gmx) = "GMX_DEPRECATED"];
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Room)
  return target;
}

size_t Room::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Room)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .buffers.resources.Room.Background backgrounds = 15 [(.buffers.gmx) = "backgrounds/background"];
  {
    unsigned int count = static_cast<unsigned int>(this->backgrounds_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->backgrounds(static_cast<int>(i)));
    }
  }

  // repeated .buffers.resources.Room.View views = 16 [(.buffers.gmx) = "views/view"];
  {
    unsigned int count = static_cast<unsigned int>(this->views_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->views(static_cast<int>(i)));
    }
  }

  // repeated .buffers.resources.Room.Instance instances = 17 [(.buffers.gmx) = "instances/instance"];
  {
    unsigned int count = static_cast<unsigned int>(this->instances_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->instances(static_cast<int>(i)));
    }
  }

  // repeated .buffers.resources.Room.Tile tiles = 18 [(.buffers.gmx) = "tiles/tile"];
  {
    unsigned int count = static_cast<unsigned int>(this->tiles_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tiles(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string caption = 1;
    if (has_caption()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->caption());
    }

    // optional string code = 10;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional string name = 28;
    if (has_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .buffers.resources.Room.MakerSettings maker_settings = 14 [(.buffers.gmx) = "makerSettings"];
    if (has_maker_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->maker_settings_);
    }

    // optional uint32 width = 2;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width());
    }

    // optional uint32 height = 3;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

    // optional uint32 vsnap = 4;
    if (has_vsnap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->vsnap());
    }

    // optional uint32 hsnap = 5;
    if (has_hsnap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hsnap());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional int32 color = 8 [(.buffers.gmx) = "colour"];
    if (has_color()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->color());
    }

    // optional bool isometric = 6;
    if (has_isometric()) {
      total_size += 1 + 1;
    }

    // optional bool persistent = 7;
    if (has_persistent()) {
      total_size += 1 + 1;
    }

    // optional bool show_color = 9 [(.buffers.gmx) = "showcolour"];
    if (has_show_color()) {
      total_size += 1 + 1;
    }

    // optional bool enable_views = 11 [(.buffers.gmx) = "enableViews"];
    if (has_enable_views()) {
      total_size += 1 + 1;
    }

    // optional bool clear_view_background = 12 [(.buffers.gmx) = "clearViewBackground"];
    if (has_clear_view_background()) {
      total_size += 1 + 1;
    }

    // optional bool clear_display_buffer = 13 [(.buffers.gmx) = "clearDisplayBuffer"];
    if (has_clear_display_buffer()) {
      total_size += 1 + 1;
    }

    // optional bool use_physics = 19 [(.buffers.gmx) = "PhysicsWorld"];
    if (has_use_physics()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional int32 phy_world_top = 20 [(.buffers.gmx) = "PhysicsWorldTop"];
    if (has_phy_world_top()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->phy_world_top());
    }

    // optional int32 phy_world_left = 21 [(.buffers.gmx) = "PhysicsWorldLeft"];
    if (has_phy_world_left()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->phy_world_left());
    }

    // optional int32 phy_world_right = 22 [(.buffers.gmx) = "PhysicsWorldRight"];
    if (has_phy_world_right()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->phy_world_right());
    }

    // optional double phy_world_xgravity = 24 [(.buffers.gmx) = "PhysicsWorldGravityX"];
    if (has_phy_world_xgravity()) {
      total_size += 2 + 8;
    }

    // optional double phy_world_ygravity = 25 [(.buffers.gmx) = "PhysicsWorldGravityY"];
    if (has_phy_world_ygravity()) {
      total_size += 2 + 8;
    }

    // optional int32 phy_world_bottom = 23 [(.buffers.gmx) = "PhysicsWorldBottom"];
    if (has_phy_world_bottom()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->phy_world_bottom());
    }

    // optional uint32 speed = 27;
    if (has_speed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->speed());
    }

    // optional double phy_world_pixel_meters = 26 [(.buffers.gmx) = "PhysicsWorldPixToMeters"];
    if (has_phy_world_pixel_meters()) {
      total_size += 2 + 8;
    }

  }
  // optional int32 id = 29 [(.buffers.gmx) = "GMX_DEPRECATED"];
  if (has_id()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Room::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Room)
  GOOGLE_DCHECK_NE(&from, this);
  const Room* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Room>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Room)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Room)
    MergeFrom(*source);
  }
}

void Room::MergeFrom(const Room& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Room)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  backgrounds_.MergeFrom(from.backgrounds_);
  views_.MergeFrom(from.views_);
  instances_.MergeFrom(from.instances_);
  tiles_.MergeFrom(from.tiles_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_caption();
      caption_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.caption_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_code();
      code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_maker_settings()->::buffers::resources::Room_MakerSettings::MergeFrom(from.maker_settings());
    }
    if (cached_has_bits & 0x00000010u) {
      width_ = from.width_;
    }
    if (cached_has_bits & 0x00000020u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000040u) {
      vsnap_ = from.vsnap_;
    }
    if (cached_has_bits & 0x00000080u) {
      hsnap_ = from.hsnap_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      color_ = from.color_;
    }
    if (cached_has_bits & 0x00000200u) {
      isometric_ = from.isometric_;
    }
    if (cached_has_bits & 0x00000400u) {
      persistent_ = from.persistent_;
    }
    if (cached_has_bits & 0x00000800u) {
      show_color_ = from.show_color_;
    }
    if (cached_has_bits & 0x00001000u) {
      enable_views_ = from.enable_views_;
    }
    if (cached_has_bits & 0x00002000u) {
      clear_view_background_ = from.clear_view_background_;
    }
    if (cached_has_bits & 0x00004000u) {
      clear_display_buffer_ = from.clear_display_buffer_;
    }
    if (cached_has_bits & 0x00008000u) {
      use_physics_ = from.use_physics_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      phy_world_top_ = from.phy_world_top_;
    }
    if (cached_has_bits & 0x00020000u) {
      phy_world_left_ = from.phy_world_left_;
    }
    if (cached_has_bits & 0x00040000u) {
      phy_world_right_ = from.phy_world_right_;
    }
    if (cached_has_bits & 0x00080000u) {
      phy_world_xgravity_ = from.phy_world_xgravity_;
    }
    if (cached_has_bits & 0x00100000u) {
      phy_world_ygravity_ = from.phy_world_ygravity_;
    }
    if (cached_has_bits & 0x00200000u) {
      phy_world_bottom_ = from.phy_world_bottom_;
    }
    if (cached_has_bits & 0x00400000u) {
      speed_ = from.speed_;
    }
    if (cached_has_bits & 0x00800000u) {
      phy_world_pixel_meters_ = from.phy_world_pixel_meters_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x01000000u) {
    set_id(from.id());
  }
}

void Room::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Room::CopyFrom(const Room& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Room)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Room::IsInitialized() const {
  return true;
}

void Room::Swap(Room* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Room::InternalSwap(Room* other) {
  using std::swap;
  backgrounds_.InternalSwap(&other->backgrounds_);
  views_.InternalSwap(&other->views_);
  instances_.InternalSwap(&other->instances_);
  tiles_.InternalSwap(&other->tiles_);
  caption_.Swap(&other->caption_);
  code_.Swap(&other->code_);
  name_.Swap(&other->name_);
  swap(maker_settings_, other->maker_settings_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  swap(vsnap_, other->vsnap_);
  swap(hsnap_, other->hsnap_);
  swap(color_, other->color_);
  swap(isometric_, other->isometric_);
  swap(persistent_, other->persistent_);
  swap(show_color_, other->show_color_);
  swap(enable_views_, other->enable_views_);
  swap(clear_view_background_, other->clear_view_background_);
  swap(clear_display_buffer_, other->clear_display_buffer_);
  swap(use_physics_, other->use_physics_);
  swap(phy_world_top_, other->phy_world_top_);
  swap(phy_world_left_, other->phy_world_left_);
  swap(phy_world_right_, other->phy_world_right_);
  swap(phy_world_xgravity_, other->phy_world_xgravity_);
  swap(phy_world_ygravity_, other->phy_world_ygravity_);
  swap(phy_world_bottom_, other->phy_world_bottom_);
  swap(speed_, other->speed_);
  swap(phy_world_pixel_meters_, other->phy_world_pixel_meters_);
  swap(id_, other->id_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Room::GetMetadata() const {
  protobuf_resources_2fRoom_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fRoom_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace resources
}  // namespace buffers

// @@protoc_insertion_point(global_scope)
