// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resources/Event.proto

#include "resources/Event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace buffers {
namespace resources {
class ArgumentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Argument>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr string_;
  ::google::protobuf::internal::ArenaStringPtr sprite_;
  ::google::protobuf::internal::ArenaStringPtr sound_;
  ::google::protobuf::internal::ArenaStringPtr background_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr script_;
  ::google::protobuf::internal::ArenaStringPtr object_;
  ::google::protobuf::internal::ArenaStringPtr room_;
  ::google::protobuf::internal::ArenaStringPtr font_;
  ::google::protobuf::internal::ArenaStringPtr timeline_;
} _Argument_default_instance_;
class ActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Action>
      _instance;
} _Action_default_instance_;
class EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Event>
      _instance;
} _Event_default_instance_;
}  // namespace resources
}  // namespace buffers
namespace protobuf_resources_2fEvent_2eproto {
void InitDefaultsArgumentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::buffers::resources::_Argument_default_instance_;
    new (ptr) ::buffers::resources::Argument();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::buffers::resources::Argument::InitAsDefaultInstance();
}

void InitDefaultsArgument() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsArgumentImpl);
}

void InitDefaultsActionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_resources_2fEvent_2eproto::InitDefaultsArgument();
  {
    void* ptr = &::buffers::resources::_Action_default_instance_;
    new (ptr) ::buffers::resources::Action();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::buffers::resources::Action::InitAsDefaultInstance();
}

void InitDefaultsAction() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsActionImpl);
}

void InitDefaultsEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_resources_2fEvent_2eproto::InitDefaultsAction();
  {
    void* ptr = &::buffers::resources::_Event_default_instance_;
    new (ptr) ::buffers::resources::Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::buffers::resources::Event::InitAsDefaultInstance();
}

void InitDefaultsEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEventImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Argument, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Argument, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Argument, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Argument, kind_),
  offsetof(::buffers::resources::ArgumentDefaultTypeInternal, string_),
  offsetof(::buffers::resources::ArgumentDefaultTypeInternal, sprite_),
  offsetof(::buffers::resources::ArgumentDefaultTypeInternal, sound_),
  offsetof(::buffers::resources::ArgumentDefaultTypeInternal, background_),
  offsetof(::buffers::resources::ArgumentDefaultTypeInternal, path_),
  offsetof(::buffers::resources::ArgumentDefaultTypeInternal, script_),
  offsetof(::buffers::resources::ArgumentDefaultTypeInternal, object_),
  offsetof(::buffers::resources::ArgumentDefaultTypeInternal, room_),
  offsetof(::buffers::resources::ArgumentDefaultTypeInternal, font_),
  offsetof(::buffers::resources::ArgumentDefaultTypeInternal, timeline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Argument, value_),
  0,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Action, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Action, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Action, libid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Action, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Action, kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Action, use_relative_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Action, is_question_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Action, use_apply_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Action, exe_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Action, function_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Action, code_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Action, who_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Action, relative_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Action, is_not_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Action, arguments_),
  3,
  4,
  5,
  6,
  7,
  8,
  10,
  0,
  1,
  2,
  9,
  11,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Event, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Event, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Event, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Event, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Event, actions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::buffers::resources::Event, code_),
  2,
  3,
  0,
  ~0u,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 17, sizeof(::buffers::resources::Argument)},
  { 28, 46, sizeof(::buffers::resources::Action)},
  { 59, 69, sizeof(::buffers::resources::Event)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::buffers::resources::_Argument_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::buffers::resources::_Action_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::buffers::resources::_Event_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "resources/Event.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025resources/Event.proto\022\021buffers.resourc"
      "es\032\roptions.proto\"\365\001\n\010Argument\022-\n\004kind\030\001"
      " \001(\0162\037.buffers.resources.ArgumentKind\022\020\n"
      "\006string\030\002 \001(\tH\000\022\020\n\006sprite\030\003 \001(\tH\000\022\017\n\005sou"
      "nd\030\004 \001(\tH\000\022\024\n\nbackground\030\005 \001(\tH\000\022\016\n\004path"
      "\030\006 \001(\tH\000\022\020\n\006script\030\007 \001(\tH\000\022\020\n\006object\030\010 \001"
      "(\tH\000\022\016\n\004room\030\t \001(\tH\000\022\016\n\004font\030\n \001(\tH\000\022\022\n\010"
      "timeline\030\013 \001(\tH\000B\007\n\005value\"\347\003\n\006Action\022\r\n\005"
      "libid\030\001 \001(\005\022\n\n\002id\030\002 \001(\005\022+\n\004kind\030\003 \001(\0162\035."
      "buffers.resources.ActionKind\022%\n\014use_rela"
      "tive\030\004 \001(\010B\017\202\265\030\013userelative\022#\n\013is_questi"
      "on\030\005 \001(\010B\016\202\265\030\nisquestion\022$\n\014use_apply_to"
      "\030\006 \001(\010B\016\202\265\030\nuseapplyto\022A\n\010exe_type\030\007 \001(\016"
      "2\".buffers.resources.ActionExecutionB\013\202\265"
      "\030\007exetype\022\'\n\rfunction_name\030\010 \001(\tB\020\202\265\030\014fu"
      "nctionname\022#\n\013code_string\030\t \001(\tB\016\202\265\030\ncod"
      "estring\022\035\n\010who_name\030\n \001(\tB\013\202\265\030\007whoName\022\020"
      "\n\010relative\030\013 \001(\010\022\031\n\006is_not\030\014 \001(\010B\t\202\265\030\005is"
      "not\022F\n\targuments\030\r \003(\0132\033.buffers.resourc"
      "es.ArgumentB\026\202\265\030\022arguments/argument\"\236\001\n\005"
      "Event\022\033\n\004type\030\001 \001(\005B\r\202\265\030\teventtype\022\031\n\006nu"
      "mber\030\002 \001(\005B\t\202\265\030\005enumb\022\027\n\004name\030\003 \001(\tB\t\202\265\030"
      "\005ename\0226\n\007actions\030\004 \003(\0132\031.buffers.resour"
      "ces.ActionB\n\202\265\030\006action\022\014\n\004code\030\005 \001(\t*\221\002\n"
      "\014ArgumentKind\022\022\n\016ARG_EXPRESSION\020\000\022\016\n\nARG"
      "_STRING\020\001\022\014\n\010ARG_BOTH\020\002\022\017\n\013ARG_BOOLEAN\020\003"
      "\022\014\n\010ARG_MENU\020\004\022\r\n\tARG_COLOR\020\r\022\022\n\016ARG_FON"
      "TSTRING\020\017\022\016\n\nARG_SPRITE\020\005\022\r\n\tARG_SOUND\020\006"
      "\022\022\n\016ARG_BACKGROUND\020\007\022\014\n\010ARG_PATH\020\010\022\016\n\nAR"
      "G_SCRIPT\020\t\022\016\n\nARG_OBJECT\020\n\022\014\n\010ARG_ROOM\020\013"
      "\022\014\n\010ARG_FONT\020\014\022\020\n\014ARG_TIMELINE\020\016*\273\001\n\nAct"
      "ionKind\022\016\n\nACT_NORMAL\020\000\022\r\n\tACT_BEGIN\020\001\022\013"
      "\n\007ACT_END\020\002\022\014\n\010ACT_ELSE\020\003\022\014\n\010ACT_EXIT\020\004\022"
      "\016\n\nACT_REPEAT\020\005\022\020\n\014ACT_VARIABLE\020\006\022\014\n\010ACT"
      "_CODE\020\007\022\023\n\017ACT_PLACEHOLDER\020\010\022\021\n\rACT_SEPA"
      "RATOR\020\t\022\r\n\tACT_LABEL\020\n*B\n\017ActionExecutio"
      "n\022\r\n\tEXEC_NONE\020\000\022\021\n\rEXEC_FUNCTION\020\001\022\r\n\tE"
      "XEC_CODE\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1490);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "resources/Event.proto", &protobuf_RegisterTypes);
  ::protobuf_options_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_resources_2fEvent_2eproto
namespace buffers {
namespace resources {
const ::google::protobuf::EnumDescriptor* ArgumentKind_descriptor() {
  protobuf_resources_2fEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_resources_2fEvent_2eproto::file_level_enum_descriptors[0];
}
bool ArgumentKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ActionKind_descriptor() {
  protobuf_resources_2fEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_resources_2fEvent_2eproto::file_level_enum_descriptors[1];
}
bool ActionKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ActionExecution_descriptor() {
  protobuf_resources_2fEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_resources_2fEvent_2eproto::file_level_enum_descriptors[2];
}
bool ActionExecution_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Argument::InitAsDefaultInstance() {
  ::buffers::resources::_Argument_default_instance_.string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::buffers::resources::_Argument_default_instance_.sprite_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::buffers::resources::_Argument_default_instance_.sound_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::buffers::resources::_Argument_default_instance_.background_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::buffers::resources::_Argument_default_instance_.path_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::buffers::resources::_Argument_default_instance_.script_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::buffers::resources::_Argument_default_instance_.object_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::buffers::resources::_Argument_default_instance_.room_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::buffers::resources::_Argument_default_instance_.font_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::buffers::resources::_Argument_default_instance_.timeline_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Argument::kKindFieldNumber;
const int Argument::kStringFieldNumber;
const int Argument::kSpriteFieldNumber;
const int Argument::kSoundFieldNumber;
const int Argument::kBackgroundFieldNumber;
const int Argument::kPathFieldNumber;
const int Argument::kScriptFieldNumber;
const int Argument::kObjectFieldNumber;
const int Argument::kRoomFieldNumber;
const int Argument::kFontFieldNumber;
const int Argument::kTimelineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Argument::Argument()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_resources_2fEvent_2eproto::InitDefaultsArgument();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Argument)
}
Argument::Argument(const Argument& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kind_ = from.kind_;
  clear_has_value();
  switch (from.value_case()) {
    case kString: {
      set_string(from.string());
      break;
    }
    case kSprite: {
      set_sprite(from.sprite());
      break;
    }
    case kSound: {
      set_sound(from.sound());
      break;
    }
    case kBackground: {
      set_background(from.background());
      break;
    }
    case kPath: {
      set_path(from.path());
      break;
    }
    case kScript: {
      set_script(from.script());
      break;
    }
    case kObject: {
      set_object(from.object());
      break;
    }
    case kRoom: {
      set_room(from.room());
      break;
    }
    case kFont: {
      set_font(from.font());
      break;
    }
    case kTimeline: {
      set_timeline(from.timeline());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Argument)
}

void Argument::SharedCtor() {
  _cached_size_ = 0;
  kind_ = 0;
  clear_has_value();
}

Argument::~Argument() {
  // @@protoc_insertion_point(destructor:buffers.resources.Argument)
  SharedDtor();
}

void Argument::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void Argument::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Argument::descriptor() {
  ::protobuf_resources_2fEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Argument& Argument::default_instance() {
  ::protobuf_resources_2fEvent_2eproto::InitDefaultsArgument();
  return *internal_default_instance();
}

Argument* Argument::New(::google::protobuf::Arena* arena) const {
  Argument* n = new Argument;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Argument::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:buffers.resources.Argument)
  switch (value_case()) {
    case kString: {
      value_.string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSprite: {
      value_.sprite_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSound: {
      value_.sound_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kBackground: {
      value_.background_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kPath: {
      value_.path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kScript: {
      value_.script_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kObject: {
      value_.object_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kRoom: {
      value_.room_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kFont: {
      value_.font_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kTimeline: {
      value_.timeline_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Argument::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Argument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kind_ = 0;
  clear_value();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Argument::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Argument)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .buffers.resources.ArgumentKind kind = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::buffers::resources::ArgumentKind_IsValid(value)) {
            set_kind(static_cast< ::buffers::resources::ArgumentKind >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string string = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string().data(), static_cast<int>(this->string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Argument.string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sprite = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sprite()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sprite().data(), static_cast<int>(this->sprite().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Argument.sprite");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sound = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sound()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sound().data(), static_cast<int>(this->sound().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Argument.sound");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string background = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_background()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->background().data(), static_cast<int>(this->background().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Argument.background");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string path = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Argument.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string script = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_script()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->script().data(), static_cast<int>(this->script().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Argument.script");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string object = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_object()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->object().data(), static_cast<int>(this->object().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Argument.object");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string room = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->room().data(), static_cast<int>(this->room().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Argument.room");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string font = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_font()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->font().data(), static_cast<int>(this->font().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Argument.font");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string timeline = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timeline()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->timeline().data(), static_cast<int>(this->timeline().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Argument.timeline");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Argument)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Argument)
  return false;
#undef DO_
}

void Argument::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Argument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .buffers.resources.ArgumentKind kind = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->kind(), output);
  }

  switch (value_case()) {
    case kString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->string().data(), static_cast<int>(this->string().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.string");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        2, this->string(), output);
      break;
    case kSprite:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->sprite().data(), static_cast<int>(this->sprite().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.sprite");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        3, this->sprite(), output);
      break;
    case kSound:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->sound().data(), static_cast<int>(this->sound().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.sound");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        4, this->sound(), output);
      break;
    case kBackground:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->background().data(), static_cast<int>(this->background().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.background");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        5, this->background(), output);
      break;
    case kPath:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->path().data(), static_cast<int>(this->path().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.path");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        6, this->path(), output);
      break;
    case kScript:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->script().data(), static_cast<int>(this->script().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.script");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        7, this->script(), output);
      break;
    case kObject:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->object().data(), static_cast<int>(this->object().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.object");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        8, this->object(), output);
      break;
    case kRoom:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->room().data(), static_cast<int>(this->room().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.room");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        9, this->room(), output);
      break;
    case kFont:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->font().data(), static_cast<int>(this->font().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.font");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        10, this->font(), output);
      break;
    case kTimeline:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->timeline().data(), static_cast<int>(this->timeline().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.timeline");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        11, this->timeline(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Argument)
}

::google::protobuf::uint8* Argument::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Argument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .buffers.resources.ArgumentKind kind = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->kind(), target);
  }

  switch (value_case()) {
    case kString:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->string().data(), static_cast<int>(this->string().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.string");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          2, this->string(), target);
      break;
    case kSprite:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->sprite().data(), static_cast<int>(this->sprite().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.sprite");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          3, this->sprite(), target);
      break;
    case kSound:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->sound().data(), static_cast<int>(this->sound().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.sound");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          4, this->sound(), target);
      break;
    case kBackground:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->background().data(), static_cast<int>(this->background().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.background");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          5, this->background(), target);
      break;
    case kPath:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->path().data(), static_cast<int>(this->path().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.path");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          6, this->path(), target);
      break;
    case kScript:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->script().data(), static_cast<int>(this->script().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.script");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          7, this->script(), target);
      break;
    case kObject:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->object().data(), static_cast<int>(this->object().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.object");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          8, this->object(), target);
      break;
    case kRoom:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->room().data(), static_cast<int>(this->room().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.room");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          9, this->room(), target);
      break;
    case kFont:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->font().data(), static_cast<int>(this->font().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.font");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          10, this->font(), target);
      break;
    case kTimeline:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->timeline().data(), static_cast<int>(this->timeline().length()),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "buffers.resources.Argument.timeline");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          11, this->timeline(), target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Argument)
  return target;
}

size_t Argument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Argument)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .buffers.resources.ArgumentKind kind = 1;
  if (has_kind()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
  }

  switch (value_case()) {
    // optional string string = 2;
    case kString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string());
      break;
    }
    // optional string sprite = 3;
    case kSprite: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sprite());
      break;
    }
    // optional string sound = 4;
    case kSound: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sound());
      break;
    }
    // optional string background = 5;
    case kBackground: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->background());
      break;
    }
    // optional string path = 6;
    case kPath: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
      break;
    }
    // optional string script = 7;
    case kScript: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->script());
      break;
    }
    // optional string object = 8;
    case kObject: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->object());
      break;
    }
    // optional string room = 9;
    case kRoom: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->room());
      break;
    }
    // optional string font = 10;
    case kFont: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->font());
      break;
    }
    // optional string timeline = 11;
    case kTimeline: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->timeline());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Argument::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Argument)
  GOOGLE_DCHECK_NE(&from, this);
  const Argument* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Argument>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Argument)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Argument)
    MergeFrom(*source);
  }
}

void Argument::MergeFrom(const Argument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Argument)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_kind()) {
    set_kind(from.kind());
  }
  switch (from.value_case()) {
    case kString: {
      set_string(from.string());
      break;
    }
    case kSprite: {
      set_sprite(from.sprite());
      break;
    }
    case kSound: {
      set_sound(from.sound());
      break;
    }
    case kBackground: {
      set_background(from.background());
      break;
    }
    case kPath: {
      set_path(from.path());
      break;
    }
    case kScript: {
      set_script(from.script());
      break;
    }
    case kObject: {
      set_object(from.object());
      break;
    }
    case kRoom: {
      set_room(from.room());
      break;
    }
    case kFont: {
      set_font(from.font());
      break;
    }
    case kTimeline: {
      set_timeline(from.timeline());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Argument::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Argument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Argument::CopyFrom(const Argument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Argument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Argument::IsInitialized() const {
  return true;
}

void Argument::Swap(Argument* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Argument::InternalSwap(Argument* other) {
  using std::swap;
  swap(kind_, other->kind_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Argument::GetMetadata() const {
  protobuf_resources_2fEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Action::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Action::kLibidFieldNumber;
const int Action::kIdFieldNumber;
const int Action::kKindFieldNumber;
const int Action::kUseRelativeFieldNumber;
const int Action::kIsQuestionFieldNumber;
const int Action::kUseApplyToFieldNumber;
const int Action::kExeTypeFieldNumber;
const int Action::kFunctionNameFieldNumber;
const int Action::kCodeStringFieldNumber;
const int Action::kWhoNameFieldNumber;
const int Action::kRelativeFieldNumber;
const int Action::kIsNotFieldNumber;
const int Action::kArgumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Action::Action()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_resources_2fEvent_2eproto::InitDefaultsAction();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Action)
}
Action::Action(const Action& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      arguments_(from.arguments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_function_name()) {
    function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
  }
  code_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code_string()) {
    code_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_string_);
  }
  who_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_who_name()) {
    who_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.who_name_);
  }
  ::memcpy(&libid_, &from.libid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_not_) -
    reinterpret_cast<char*>(&libid_)) + sizeof(is_not_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Action)
}

void Action::SharedCtor() {
  _cached_size_ = 0;
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  who_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&libid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_not_) -
      reinterpret_cast<char*>(&libid_)) + sizeof(is_not_));
}

Action::~Action() {
  // @@protoc_insertion_point(destructor:buffers.resources.Action)
  SharedDtor();
}

void Action::SharedDtor() {
  function_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  who_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Action::descriptor() {
  ::protobuf_resources_2fEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Action& Action::default_instance() {
  ::protobuf_resources_2fEvent_2eproto::InitDefaultsAction();
  return *internal_default_instance();
}

Action* Action::New(::google::protobuf::Arena* arena) const {
  Action* n = new Action;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Action::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arguments_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!function_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*function_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!code_string_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*code_string_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!who_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*who_name_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&libid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_question_) -
        reinterpret_cast<char*>(&libid_)) + sizeof(is_question_));
  }
  if (cached_has_bits & 3840u) {
    ::memset(&use_apply_to_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_not_) -
        reinterpret_cast<char*>(&use_apply_to_)) + sizeof(is_not_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Action)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 libid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_libid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .buffers.resources.ActionKind kind = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::buffers::resources::ActionKind_IsValid(value)) {
            set_kind(static_cast< ::buffers::resources::ActionKind >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                3, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_relative = 4 [(.buffers.gmx) = "userelative"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_use_relative();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_relative_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_question = 5 [(.buffers.gmx) = "isquestion"];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_is_question();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_question_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_apply_to = 6 [(.buffers.gmx) = "useapplyto"];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_use_apply_to();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_apply_to_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .buffers.resources.ActionExecution exe_type = 7 [(.buffers.gmx) = "exetype"];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::buffers::resources::ActionExecution_IsValid(value)) {
            set_exe_type(static_cast< ::buffers::resources::ActionExecution >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                7, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string function_name = 8 [(.buffers.gmx) = "functionname"];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->function_name().data(), static_cast<int>(this->function_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Action.function_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string code_string = 9 [(.buffers.gmx) = "codestring"];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code_string().data(), static_cast<int>(this->code_string().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Action.code_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string who_name = 10 [(.buffers.gmx) = "whoName"];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_who_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->who_name().data(), static_cast<int>(this->who_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Action.who_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool relative = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_relative();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &relative_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_not = 12 [(.buffers.gmx) = "isnot"];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_is_not();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_not_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .buffers.resources.Argument arguments = 13 [(.buffers.gmx) = "arguments/argument"];
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_arguments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Action)
  return false;
#undef DO_
}

void Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 libid = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libid(), output);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional .buffers.resources.ActionKind kind = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->kind(), output);
  }

  // optional bool use_relative = 4 [(.buffers.gmx) = "userelative"];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->use_relative(), output);
  }

  // optional bool is_question = 5 [(.buffers.gmx) = "isquestion"];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_question(), output);
  }

  // optional bool use_apply_to = 6 [(.buffers.gmx) = "useapplyto"];
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->use_apply_to(), output);
  }

  // optional .buffers.resources.ActionExecution exe_type = 7 [(.buffers.gmx) = "exetype"];
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->exe_type(), output);
  }

  // optional string function_name = 8 [(.buffers.gmx) = "functionname"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->function_name().data(), static_cast<int>(this->function_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Action.function_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->function_name(), output);
  }

  // optional string code_string = 9 [(.buffers.gmx) = "codestring"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code_string().data(), static_cast<int>(this->code_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Action.code_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->code_string(), output);
  }

  // optional string who_name = 10 [(.buffers.gmx) = "whoName"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->who_name().data(), static_cast<int>(this->who_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Action.who_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->who_name(), output);
  }

  // optional bool relative = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->relative(), output);
  }

  // optional bool is_not = 12 [(.buffers.gmx) = "isnot"];
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_not(), output);
  }

  // repeated .buffers.resources.Argument arguments = 13 [(.buffers.gmx) = "arguments/argument"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->arguments(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Action)
}

::google::protobuf::uint8* Action::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Action)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 libid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libid(), target);
  }

  // optional int32 id = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional .buffers.resources.ActionKind kind = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->kind(), target);
  }

  // optional bool use_relative = 4 [(.buffers.gmx) = "userelative"];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->use_relative(), target);
  }

  // optional bool is_question = 5 [(.buffers.gmx) = "isquestion"];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_question(), target);
  }

  // optional bool use_apply_to = 6 [(.buffers.gmx) = "useapplyto"];
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->use_apply_to(), target);
  }

  // optional .buffers.resources.ActionExecution exe_type = 7 [(.buffers.gmx) = "exetype"];
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->exe_type(), target);
  }

  // optional string function_name = 8 [(.buffers.gmx) = "functionname"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->function_name().data(), static_cast<int>(this->function_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Action.function_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->function_name(), target);
  }

  // optional string code_string = 9 [(.buffers.gmx) = "codestring"];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code_string().data(), static_cast<int>(this->code_string().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Action.code_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->code_string(), target);
  }

  // optional string who_name = 10 [(.buffers.gmx) = "whoName"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->who_name().data(), static_cast<int>(this->who_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Action.who_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->who_name(), target);
  }

  // optional bool relative = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->relative(), target);
  }

  // optional bool is_not = 12 [(.buffers.gmx) = "isnot"];
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_not(), target);
  }

  // repeated .buffers.resources.Argument arguments = 13 [(.buffers.gmx) = "arguments/argument"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arguments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->arguments(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Action)
  return target;
}

size_t Action::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Action)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .buffers.resources.Argument arguments = 13 [(.buffers.gmx) = "arguments/argument"];
  {
    unsigned int count = static_cast<unsigned int>(this->arguments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arguments(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string function_name = 8 [(.buffers.gmx) = "functionname"];
    if (has_function_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->function_name());
    }

    // optional string code_string = 9 [(.buffers.gmx) = "codestring"];
    if (has_code_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code_string());
    }

    // optional string who_name = 10 [(.buffers.gmx) = "whoName"];
    if (has_who_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->who_name());
    }

    // optional int32 libid = 1;
    if (has_libid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libid());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional .buffers.resources.ActionKind kind = 3;
    if (has_kind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->kind());
    }

    // optional bool use_relative = 4 [(.buffers.gmx) = "userelative"];
    if (has_use_relative()) {
      total_size += 1 + 1;
    }

    // optional bool is_question = 5 [(.buffers.gmx) = "isquestion"];
    if (has_is_question()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional bool use_apply_to = 6 [(.buffers.gmx) = "useapplyto"];
    if (has_use_apply_to()) {
      total_size += 1 + 1;
    }

    // optional bool relative = 11;
    if (has_relative()) {
      total_size += 1 + 1;
    }

    // optional .buffers.resources.ActionExecution exe_type = 7 [(.buffers.gmx) = "exetype"];
    if (has_exe_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->exe_type());
    }

    // optional bool is_not = 12 [(.buffers.gmx) = "isnot"];
    if (has_is_not()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Action::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Action)
  GOOGLE_DCHECK_NE(&from, this);
  const Action* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Action>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Action)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Action)
    MergeFrom(*source);
  }
}

void Action::MergeFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Action)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arguments_.MergeFrom(from.arguments_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_function_name();
      function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_code_string();
      code_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_string_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_who_name();
      who_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.who_name_);
    }
    if (cached_has_bits & 0x00000008u) {
      libid_ = from.libid_;
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000020u) {
      kind_ = from.kind_;
    }
    if (cached_has_bits & 0x00000040u) {
      use_relative_ = from.use_relative_;
    }
    if (cached_has_bits & 0x00000080u) {
      is_question_ = from.is_question_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      use_apply_to_ = from.use_apply_to_;
    }
    if (cached_has_bits & 0x00000200u) {
      relative_ = from.relative_;
    }
    if (cached_has_bits & 0x00000400u) {
      exe_type_ = from.exe_type_;
    }
    if (cached_has_bits & 0x00000800u) {
      is_not_ = from.is_not_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Action::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Action::CopyFrom(const Action& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Action)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Action::IsInitialized() const {
  return true;
}

void Action::Swap(Action* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Action::InternalSwap(Action* other) {
  using std::swap;
  arguments_.InternalSwap(&other->arguments_);
  function_name_.Swap(&other->function_name_);
  code_string_.Swap(&other->code_string_);
  who_name_.Swap(&other->who_name_);
  swap(libid_, other->libid_);
  swap(id_, other->id_);
  swap(kind_, other->kind_);
  swap(use_relative_, other->use_relative_);
  swap(is_question_, other->is_question_);
  swap(use_apply_to_, other->use_apply_to_);
  swap(relative_, other->relative_);
  swap(exe_type_, other->exe_type_);
  swap(is_not_, other->is_not_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Action::GetMetadata() const {
  protobuf_resources_2fEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Event::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kTypeFieldNumber;
const int Event::kNumberFieldNumber;
const int Event::kNameFieldNumber;
const int Event::kActionsFieldNumber;
const int Event::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_resources_2fEvent_2eproto::InitDefaultsEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:buffers.resources.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      actions_(from.actions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&number_) -
    reinterpret_cast<char*>(&type_)) + sizeof(number_));
  // @@protoc_insertion_point(copy_constructor:buffers.resources.Event)
}

void Event::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&number_) -
      reinterpret_cast<char*>(&type_)) + sizeof(number_));
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:buffers.resources.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Event::descriptor() {
  ::protobuf_resources_2fEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fEvent_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Event& Event::default_instance() {
  ::protobuf_resources_2fEvent_2eproto::InitDefaultsEvent();
  return *internal_default_instance();
}

Event* Event::New(::google::protobuf::Arena* arena) const {
  Event* n = new Event;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:buffers.resources.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*code_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&number_) -
        reinterpret_cast<char*>(&type_)) + sizeof(number_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:buffers.resources.Event)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1 [(.buffers.gmx) = "eventtype"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 number = 2 [(.buffers.gmx) = "enumb"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3 [(.buffers.gmx) = "ename"];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Event.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .buffers.resources.Action actions = 4 [(.buffers.gmx) = "action"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), static_cast<int>(this->code().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "buffers.resources.Event.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:buffers.resources.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:buffers.resources.Event)
  return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:buffers.resources.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1 [(.buffers.gmx) = "eventtype"];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 number = 2 [(.buffers.gmx) = "enumb"];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->number(), output);
  }

  // optional string name = 3 [(.buffers.gmx) = "ename"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Event.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // repeated .buffers.resources.Action actions = 4 [(.buffers.gmx) = "action"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->actions(static_cast<int>(i)), output);
  }

  // optional string code = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Event.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:buffers.resources.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:buffers.resources.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1 [(.buffers.gmx) = "eventtype"];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 number = 2 [(.buffers.gmx) = "enumb"];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->number(), target);
  }

  // optional string name = 3 [(.buffers.gmx) = "ename"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Event.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // repeated .buffers.resources.Action actions = 4 [(.buffers.gmx) = "action"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->actions(static_cast<int>(i)), deterministic, target);
  }

  // optional string code = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), static_cast<int>(this->code().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "buffers.resources.Event.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:buffers.resources.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:buffers.resources.Event)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .buffers.resources.Action actions = 4 [(.buffers.gmx) = "action"];
  {
    unsigned int count = static_cast<unsigned int>(this->actions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->actions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 3 [(.buffers.gmx) = "ename"];
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string code = 5;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional int32 type = 1 [(.buffers.gmx) = "eventtype"];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 number = 2 [(.buffers.gmx) = "enumb"];
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->number());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:buffers.resources.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:buffers.resources.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:buffers.resources.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:buffers.resources.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_code();
      code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      number_ = from.number_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:buffers.resources.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:buffers.resources.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  using std::swap;
  actions_.InternalSwap(&other->actions_);
  name_.Swap(&other->name_);
  code_.Swap(&other->code_);
  swap(type_, other->type_);
  swap(number_, other->number_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_resources_2fEvent_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_resources_2fEvent_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace resources
}  // namespace buffers

// @@protoc_insertion_point(global_scope)
